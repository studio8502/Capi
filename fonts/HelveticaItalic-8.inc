

/* Start of automatically generated font definition for HelveticaItalic_8. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_HelveticaItalic_8_dictionary_data[211] PROGMEM = {
    0x07, 0x02, 0x80, 0x01, 0x04, 0x80, 0x04, 0x80, 0x08, 0x80, 0x03, 0x03, 0x81, 0x24, 0x81, 0x03,
    0x03, 0x80, 0x02, 0x80, 0x01, 0x02, 0x83, 0x14, 0x84, 0x01, 0x81, 0x03, 0x83, 0x03, 0x03, 0x80,
    0x06, 0x0c, 0x2c, 0x02, 0x80, 0x02, 0x1c, 0x03, 0x01, 0x82, 0x80, 0x01, 0x80, 0x01, 0x81, 0x09,
    0x03, 0x81, 0x03, 0x82, 0x14, 0x15, 0x80, 0x03, 0x80, 0x01, 0x05, 0x80, 0x03, 0x01, 0x80, 0x01,
    0x06, 0x80, 0x06, 0x07, 0x80, 0x03, 0x03, 0x82, 0x06, 0x80, 0x0c, 0x80, 0x03, 0x01, 0x80, 0x06,
    0x29, 0x86, 0xb4, 0x30, 0x23, 0x24, 0x19, 0x86, 0x94, 0x18, 0x30, 0xfd, 0xfc, 0xa6, 0x94, 0xc4,
    0x36, 0x00, 0x1b, 0x27, 0xa7, 0x94, 0x88, 0xa6, 0x8d, 0x2b, 0x94, 0xfd, 0x38, 0x2e, 0xfc, 0x95,
    0x27, 0x35, 0x19, 0x94, 0xe4, 0x8b, 0x31, 0x1e, 0x00, 0x22, 0x8c, 0xa5, 0x93, 0x88, 0x95, 0xfe,
    0xa4, 0x27, 0x35, 0x27, 0x29, 0x89, 0x36, 0x25, 0xe4, 0xa8, 0xa4, 0x1b, 0x33, 0x00, 0xa6, 0x94,
    0xfc, 0x8d, 0xb4, 0xc6, 0x2e, 0x89, 0x32, 0x85, 0x89, 0x30, 0x22, 0x1f, 0x2c, 0x94, 0x00, 0x98,
    0x74, 0x35, 0x2e, 0x30, 0x00, 0x86, 0x95, 0xec, 0xa0, 0x86, 0x8d, 0xac, 0x18, 0x30, 0x2e, 0x34,
    0x35, 0x29, 0x1b, 0x24, 0x2d, 0x00, 0x96, 0x00, 0x89, 0x29, 0x8d, 0x88, 0xa5, 0x88, 0x2e, 0x00,
    0x96, 0x94, 0x86, 0x1a, 0x36, 0x1a, 0x18, 0x2f, 0xa4, 0x3a, 0x93, 0x30, 0x29, 0x89, 0xa8, 0xa4,
    0x86, 0x9c, 0x25,
};

static const uint16_t mf_rlefont_HelveticaItalic_8_dictionary_offsets[81] PROGMEM = {
    0x0000, 0x0001, 0x0004, 0x0006, 0x000b, 0x000d, 0x000e, 0x0010,
    0x0015, 0x0017, 0x0019, 0x001c, 0x001e, 0x0021, 0x0022, 0x0023,
    0x0026, 0x0027, 0x0028, 0x002a, 0x002d, 0x002f, 0x0030, 0x0033,
    0x0034, 0x0035, 0x0037, 0x003a, 0x003d, 0x0040, 0x0043, 0x0046,
    0x0049, 0x004b, 0x004d, 0x0050, 0x0053, 0x0055, 0x0057, 0x005a,
    0x005c, 0x005f, 0x0061, 0x0063, 0x0069, 0x006b, 0x006e, 0x0070,
    0x0072, 0x0074, 0x0076, 0x0078, 0x007a, 0x007f, 0x0081, 0x0084,
    0x0086, 0x0088, 0x008b, 0x008d, 0x0090, 0x0093, 0x0095, 0x0096,
    0x0099, 0x009c, 0x009e, 0x00a4, 0x00a7, 0x00ac, 0x00af, 0x00b1,
    0x00b3, 0x00b5, 0x00b7, 0x00b9, 0x00bf, 0x00c3, 0x00c7, 0x00cc,
    0x00d3,
};

static const uint8_t mf_rlefont_HelveticaItalic_8_glyph_data_0[677] PROGMEM = {
    0x02, 0x00, 0x10, 0x03, 0x31, 0x18, 0x5e, 0x27, 0x2d, 0xa4, 0x10, 0x03, 0x30, 0x89, 0xac, 0x10,
    0x06, 0x31, 0x4d, 0xd3, 0x94, 0xa5, 0x93, 0x4f, 0xac, 0x10, 0x05, 0x00, 0x41, 0xb4, 0x51, 0x85,
    0x2e, 0x54, 0x50, 0x07, 0x31, 0xcd, 0x98, 0xa5, 0x89, 0x94, 0x87, 0x99, 0x68, 0x10, 0x06, 0x30,
    0xd0, 0xa4, 0x55, 0x6c, 0xb4, 0x86, 0xb0, 0x10, 0x02, 0x4e, 0x10, 0x03, 0x41, 0x1b, 0x52, 0x35,
    0xf8, 0x10, 0x03, 0xe4, 0x36, 0x35, 0x4e, 0x42, 0x1a, 0x10, 0x03, 0x41, 0x49, 0x1c, 0x10, 0x05,
    0x28, 0x47, 0x23, 0x3d, 0x10, 0x02, 0x26, 0x31, 0x18, 0x5e, 0x10, 0x05, 0x26, 0xbc, 0x10, 0x02,
    0x26, 0x3f, 0x10, 0x02, 0x3f, 0x5f, 0x52, 0x10, 0x05, 0x58, 0x40, 0x27, 0x54, 0x10, 0x05, 0x30,
    0x27, 0x49, 0x33, 0x52, 0x10, 0x05, 0x58, 0x29, 0x9c, 0xb4, 0x35, 0x20, 0x10, 0x05, 0x58, 0xfc,
    0x9c, 0x36, 0x54, 0x10, 0x05, 0x00, 0x30, 0x86, 0x2e, 0x4f, 0x80, 0x35, 0xf8, 0x10, 0x05, 0x30,
    0x93, 0x24, 0xa0, 0x36, 0x54, 0x10, 0x05, 0x58, 0x37, 0x0f, 0x88, 0x54, 0x10, 0x05, 0x3c, 0x33,
    0x65, 0xfe, 0x10, 0x05, 0x58, 0x49, 0x64, 0xf0, 0x10, 0x05, 0x58, 0x94, 0x3a, 0xcb, 0x54, 0x10,
    0x02, 0x2d, 0x3f, 0x25, 0x31, 0x10, 0x02, 0x31, 0x28, 0x35, 0x27, 0xa4, 0x10, 0x05, 0x1d, 0x65,
    0xf8, 0x10, 0x06, 0x1d, 0x37, 0xe4, 0x74, 0x10, 0x05, 0x1d, 0x24, 0x24, 0x5e, 0x10, 0x05, 0x31,
    0x85, 0x65, 0xe4, 0xa4, 0x10, 0x09, 0x00, 0x21, 0x9c, 0x1f, 0x9b, 0xae, 0x96, 0x23, 0x87, 0x74,
    0x10, 0x07, 0x30, 0x24, 0x22, 0x4c, 0xec, 0x10, 0x06, 0x3c, 0x61, 0x49, 0x19, 0x5b, 0x7c, 0x10,
    0x06, 0x4a, 0xf8, 0x8c, 0x3e, 0x97, 0x74, 0x10, 0x06, 0x3c, 0x53, 0x53, 0x46, 0x7c, 0x10, 0x06,
    0x21, 0x3b, 0xe7, 0x47, 0x20, 0x10, 0x05, 0x21, 0x3b, 0x39, 0x4e, 0x10, 0x06, 0x4a, 0x53, 0x29,
    0x8c, 0x8b, 0x97, 0x74, 0x10, 0x06, 0x3f, 0x5b, 0x00, 0x80, 0x40, 0x5b, 0x10, 0x04, 0x30, 0x4e,
    0x4f, 0x4f, 0x1a, 0x10, 0x06, 0x3f, 0x4d, 0x55, 0xbc, 0x51, 0xec, 0x10, 0x04, 0x3f, 0x5f, 0x1b,
    0x00, 0x74, 0x10, 0x07, 0x3f, 0x5b, 0xec, 0x91, 0x6e, 0xac, 0x89, 0xad, 0x10, 0x06, 0x3f, 0x88,
    0xaa, 0xb4, 0x46, 0x59, 0x22, 0xa6, 0x10, 0x06, 0x4a, 0x43, 0xbc, 0x10, 0x06, 0x30, 0x0f, 0x87,
    0x64, 0x93, 0x3d, 0x10, 0x06, 0x4a, 0xfc, 0x9d, 0x5b, 0xce, 0xb0, 0x85, 0x23, 0xa4, 0x10, 0x06,
    0x30, 0x0f, 0x87, 0x64, 0x23, 0x64, 0x10, 0x06, 0x4a, 0x46, 0x37, 0x90, 0x46, 0x74, 0x10, 0x04,
    0x3c, 0x3d, 0xe4, 0x4e, 0x10, 0x06, 0x30, 0x95, 0x40, 0x46, 0x5b, 0x74, 0x10, 0x06, 0x3f, 0x27,
    0x64, 0x62, 0x4f, 0x1a, 0x10, 0x08, 0x30, 0xed, 0xa8, 0x61, 0x9e, 0xa5, 0x8e, 0x64, 0x10, 0x06,
    0x3f, 0x27, 0x54, 0xe4, 0x9c, 0xa4, 0x5b, 0x10, 0x06, 0x31, 0x48, 0x4d, 0x55, 0x1b, 0x10, 0x06,
    0x21, 0x36, 0x65, 0xe3, 0x10, 0x04, 0x2d, 0x1c, 0x5f, 0x52, 0x3b, 0x10, 0x02, 0xc4, 0x25, 0x4e,
    0x5f, 0xa4, 0x10, 0x04, 0x2d, 0x9c, 0x5f, 0x1b, 0xa4, 0x36, 0xb4, 0x10, 0x05, 0x00, 0x30, 0x86,
    0x2e, 0xac, 0x10, 0x05, 0x26, 0x21, 0x10, 0x03, 0x27, 0x36, 0x10, 0x04, 0x28, 0x22, 0x35, 0x66,
    0x04, 0x41, 0x3b, 0xe4, 0x4f, 0x64, 0x2a, 0x10, 0x04, 0x5d, 0x4f, 0x47, 0x1c, 0x10, 0x04, 0x18,
    0x5f, 0x2e, 0x67, 0x10, 0x04, 0x5d, 0x5a, 0x03, 0x25, 0xea, 0x33, 0x74, 0x36, 0x52, 0x10, 0x04,
    0x00, 0x5d, 0x32, 0x85, 0x8d, 0x4f, 0xb4, 0x36, 0x1c, 0x10, 0x05, 0xc4, 0x5f, 0x74, 0x51, 0x27,
    0x64, 0x10, 0x02, 0xe4, 0x50, 0x4e, 0x42, 0x10, 0x04, 0xc4, 0x50, 0x4e, 0x29, 0x4e, 0xa4, 0x10,
    0x04, 0x2d, 0x3d, 0x51, 0x4d, 0x87, 0x64, 0x10, 0x02, 0xc4, 0x5f, 0x52, 0x1b, 0x10, 0x06, 0x28,
    0xea, 0x87, 0x99, 0x98, 0xa5, 0x62, 0xae, 0x10, 0x05, 0x28, 0x2a, 0x51, 0x27, 0x64, 0x10, 0x05,
    0x5d, 0x63, 0x10, 0x05, 0x5d, 0xfc, 0x98, 0x94, 0x4d, 0x55, 0x3d, 0x10, 0x04, 0x5d, 0x32, 0x85,
    0x8d, 0x4f, 0xb4, 0x5f, 0x10, 0x03, 0x28, 0xfe, 0x55, 0x1c, 0x5f, 0x10, 0x04, 0x5d, 0x24, 0xd0,
    0x36, 0x1c, 0x10, 0x03, 0x30, 0x3a, 0x23, 0x3d, 0x35, 0x1c, 0x10, 0x04, 0x28, 0x62, 0x67, 0x10,
    0x05, 0x18, 0x30, 0x64, 0xee, 0x5f, 0x10, 0x06, 0x28, 0xee, 0x86, 0x99, 0xac, 0x86, 0x23, 0xa8,
    0x10, 0x05, 0x29, 0x30, 0x51, 0x5e, 0x62, 0xa8, 0x10, 0x04, 0x18, 0x31, 0x88, 0x54, 0x5f, 0x1a,
    0x10, 0x04, 0x28, 0x92, 0x35, 0x5e, 0x2a, 0x10, 0x03, 0x41, 0x1b, 0xb4, 0x18, 0x5e, 0x27, 0x50,
    0x02, 0x18, 0x52, 0x52, 0xa4, 0x10, 0x03, 0xf8, 0x18, 0x47, 0x90, 0xa4, 0x5f, 0x1a, 0x10, 0x06,
    0xfc, 0x1d, 0x9a, 0x6c, 0x10,
};

static const uint16_t mf_rlefont_HelveticaItalic_8_glyph_offsets_0[95] PROGMEM = {
    0x0000, 0x0003, 0x000b, 0x0010, 0x001a, 0x0023, 0x002e, 0x0038,
    0x003b, 0x0042, 0x004a, 0x004f, 0x0055, 0x005b, 0x005f, 0x0063,
    0x0068, 0x006e, 0x0075, 0x007d, 0x0084, 0x008e, 0x0096, 0x009d,
    0x00a3, 0x00a9, 0x00b0, 0x00b6, 0x00bd, 0x00c2, 0x00c8, 0x00ce,
    0x00d5, 0x00e1, 0x00e8, 0x00f0, 0x00f8, 0x00ff, 0x0106, 0x010c,
    0x0115, 0x0063, 0x011d, 0x0124, 0x012c, 0x0133, 0x013d, 0x0147,
    0x014c, 0x0154, 0x015f, 0x0167, 0x016f, 0x0175, 0x017d, 0x0185,
    0x018f, 0x0198, 0x019f, 0x01a5, 0x01ac, 0x01b3, 0x01bc, 0x01c3,
    0x01c7, 0x01cb, 0x01d0, 0x01d8, 0x01de, 0x01e4, 0x01e7, 0x01ef,
    0x01fa, 0x0202, 0x0208, 0x0210, 0x0218, 0x021e, 0x0228, 0x022f,
    0x0233, 0x023c, 0x0245, 0x024c, 0x0253, 0x025b, 0x0260, 0x0267,
    0x0271, 0x0279, 0x0281, 0x0288, 0x0290, 0x0296, 0x029f,
};

static const uint8_t mf_rlefont_HelveticaItalic_8_glyph_data_1[619] PROGMEM = {
    0x02, 0x00, 0x10, 0x03, 0x28, 0x27, 0x25, 0x4e, 0x42, 0x10, 0x06, 0x30, 0x24, 0x2c, 0x51, 0x18,
    0x92, 0xa4, 0x10, 0x05, 0x58, 0xbc, 0x18, 0x85, 0x57, 0x10, 0x05, 0x3f, 0x55, 0xec, 0x55, 0x1f,
    0x10, 0x05, 0x30, 0x8d, 0x80, 0xa4, 0x4d, 0x23, 0x90, 0xa4, 0x10, 0x02, 0x3f, 0x5f, 0x2d, 0x52,
    0x10, 0x05, 0x30, 0xd0, 0x33, 0x49, 0x4f, 0xbc, 0x5f, 0x1c, 0x10, 0x02, 0x30, 0x2b, 0x10, 0x08,
    0x25, 0xca, 0x94, 0x86, 0xb1, 0xac, 0x46, 0x8f, 0x54, 0x10, 0x04, 0x2d, 0xd0, 0x18, 0x87, 0x90,
    0x2d, 0x74, 0x10, 0x06, 0x1d, 0x57, 0xac, 0x10, 0x06, 0x84, 0x25, 0x3c, 0xa4, 0x10, 0x05, 0x26,
    0xbc, 0x10, 0x08, 0x25, 0x22, 0x1f, 0x32, 0x8f, 0x9e, 0x95, 0x91, 0x54, 0x10, 0x02, 0x30, 0x2f,
    0x10, 0x03, 0x31, 0x85, 0x8e, 0xb4, 0x10, 0x05, 0xfc, 0x25, 0x5f, 0x74, 0x50, 0x2f, 0x10, 0x02,
    0x30, 0x1e, 0xac, 0x36, 0x74, 0x10, 0x02, 0xc4, 0x25, 0xa0, 0x35, 0x8c, 0xb4, 0x10, 0x02, 0x41,
    0x1a, 0x10, 0x04, 0x28, 0x62, 0x4f, 0x19, 0x86, 0x8e, 0x49, 0x3d, 0x10, 0x05, 0x3c, 0xaa, 0xb4,
    0x4d, 0x89, 0x57, 0x4f, 0xac, 0x10, 0x02, 0x1d, 0x47, 0x10, 0x02, 0x30, 0x26, 0x39, 0xb4, 0x10,
    0x02, 0x30, 0xe6, 0x74, 0x5f, 0x10, 0x04, 0x25, 0x87, 0x98, 0xa4, 0x38, 0xbc, 0x10, 0x06, 0x1d,
    0x4f, 0x57, 0x10, 0x07, 0x31, 0x5c, 0x4d, 0x59, 0xd3, 0xa4, 0x10, 0x07, 0x31, 0x5c, 0xca, 0x98,
    0x95, 0x88, 0x74, 0x10, 0x07, 0xc4, 0x25, 0xa0, 0x46, 0x48, 0xf5, 0xb0, 0x4d, 0x59, 0xd3, 0xa4,
    0x10, 0x05, 0x28, 0x60, 0x5e, 0x3e, 0x2c, 0x10, 0x06, 0x29, 0x86, 0x25, 0x86, 0x2e, 0x4c, 0xec,
    0x10, 0x06, 0x4f, 0x25, 0x86, 0x2e, 0x4c, 0xec, 0x10, 0x06, 0xac, 0x5f, 0x00, 0x2e, 0x4c, 0xec,
    0x10, 0x08, 0xfc, 0x21, 0x4f, 0x6c, 0x75, 0xa4, 0x48, 0xe2, 0x10, 0x06, 0x4a, 0x53, 0x35, 0x46,
    0x74, 0x36, 0xb4, 0x10, 0x06, 0x94, 0x25, 0x80, 0x3b, 0xe7, 0x47, 0x20, 0x10, 0x06, 0x32, 0x38,
    0x80, 0x3b, 0xe7, 0x47, 0x20, 0x10, 0x02, 0x19, 0x25, 0x52, 0x52, 0x10, 0x02, 0x34, 0x38, 0x52,
    0x52, 0x10, 0x06, 0x3c, 0x46, 0x1c, 0x53, 0x46, 0x7c, 0x10, 0x06, 0x32, 0x38, 0x46, 0x9c, 0x86,
    0x97, 0xa8, 0xa5, 0x4b, 0xa6, 0x10, 0x06, 0xe4, 0x38, 0x49, 0x43, 0xbc, 0x10, 0x06, 0x4f, 0x25,
    0x8b, 0x43, 0xbc, 0x10, 0x05, 0x2d, 0x3f, 0x55, 0x2e, 0x1f, 0x10, 0x06, 0x30, 0x2a, 0xa5, 0x4b,
    0xad, 0xac, 0x88, 0x97, 0x7c, 0x10, 0x06, 0x94, 0x25, 0x46, 0x40, 0x46, 0x5b, 0x74, 0x10, 0x06,
    0x32, 0x38, 0x46, 0x40, 0x46, 0x5b, 0x74, 0x10, 0x06, 0x00, 0x94, 0x25, 0x64, 0x8e, 0xb4, 0x5f,
    0x10, 0x06, 0x30, 0x85, 0x37, 0x8d, 0x1f, 0x7c, 0xa4, 0x10, 0x05, 0x58, 0x49, 0x64, 0xee, 0x10,
    0x04, 0x27, 0x50, 0x22, 0x35, 0x66, 0x04, 0x1a, 0x50, 0x22, 0x35, 0x66, 0x04, 0xec, 0x18, 0x45,
    0x35, 0x66, 0x04, 0x32, 0x85, 0x45, 0x35, 0x66, 0x04, 0xfc, 0x2d, 0x45, 0xc4, 0x4d, 0x66, 0x06,
    0x28, 0x2c, 0x22, 0xac, 0x74, 0xa5, 0x86, 0x80, 0x10, 0x04, 0x5d, 0xac, 0x33, 0xa4, 0x55, 0x33,
    0xb4, 0x10, 0x04, 0x8c, 0x50, 0x22, 0x5a, 0x04, 0xa4, 0x50, 0x22, 0x5a, 0x04, 0x1a, 0x18, 0x45,
    0x5a, 0x04, 0x25, 0x45, 0x5a, 0x02, 0xe6, 0x50, 0x4e, 0x42, 0x10, 0x02, 0xec, 0x50, 0x4e, 0x42,
    0x10, 0x02, 0x88, 0x94, 0x38, 0x52, 0x1b, 0x10, 0x02, 0x2d, 0x8e, 0x25, 0x4e, 0x42, 0x10, 0x05,
    0x84, 0xb4, 0x55, 0xec, 0x22, 0x63, 0x10, 0x05, 0x00, 0x57, 0x18, 0x74, 0x51, 0x27, 0x64, 0x10,
    0x05, 0x8c, 0x50, 0x22, 0x63, 0x10, 0x05, 0x35, 0x00, 0x38, 0x2e, 0x63, 0x10, 0x05, 0x1a, 0x18,
    0x45, 0x63, 0x10, 0x05, 0x57, 0x25, 0x22, 0x8c, 0xa5, 0x91, 0x54, 0x10, 0x05, 0x25, 0x45, 0x8c,
    0xa5, 0x91, 0x54, 0x10, 0x05, 0x28, 0x60, 0x23, 0x41, 0x10, 0x05, 0x30, 0x24, 0xcb, 0x1f, 0x40,
    0xc6, 0xa0, 0xa4, 0x10, 0x04, 0x27, 0x50, 0x62, 0x67, 0x10, 0x04, 0x1a, 0x50, 0x62, 0x67, 0x10,
    0x04, 0x24, 0x34, 0x38, 0x4f, 0x67, 0x10, 0x04, 0x18, 0x94, 0x38, 0x4f, 0x67, 0x10, 0x04, 0x1a,
    0x50, 0x0f, 0x88, 0x54, 0x5f, 0x1a, 0x10, 0x04, 0x3f, 0x18, 0x87, 0x4f, 0x19, 0x4d, 0x86, 0x90,
    0x3b, 0x10, 0x04, 0x84, 0x94, 0x38, 0x64, 0xf0, 0x5f, 0x1a, 0x10,
};

static const uint16_t mf_rlefont_HelveticaItalic_8_glyph_offsets_1[96] PROGMEM = {
    0x0000, 0x0003, 0x000a, 0x0013, 0x001a, 0x0021, 0x002b, 0x0031,
    0x003b, 0x003f, 0x004a, 0x0053, 0x0058, 0x005e, 0x0062, 0x006d,
    0x0071, 0x0077, 0x007f, 0x0086, 0x008e, 0x0092, 0x009c, 0x00a6,
    0x00aa, 0x00b0, 0x00b6, 0x00be, 0x00c3, 0x00cb, 0x00d4, 0x00e1,
    0x00e8, 0x00e8, 0x00f1, 0x00f1, 0x00f1, 0x00f9, 0x0101, 0x010b,
    0x0114, 0x0114, 0x011d, 0x011d, 0x0126, 0x0126, 0x012c, 0x012c,
    0x0132, 0x013a, 0x0146, 0x0146, 0x014d, 0x014d, 0x014d, 0x0154,
    0x015b, 0x0166, 0x0166, 0x016f, 0x016f, 0x0178, 0x0181, 0x018a,
    0x0190, 0x0196, 0x019c, 0x01a2, 0x01a8, 0x019c, 0x01af, 0x01b9,
    0x01c2, 0x01c7, 0x01cc, 0x01d1, 0x01d5, 0x01db, 0x01e1, 0x01e8,
    0x01ef, 0x01f7, 0x0200, 0x0206, 0x020d, 0x0213, 0x021c, 0x0224,
    0x022a, 0x0234, 0x023a, 0x0240, 0x0247, 0x024e, 0x0257, 0x0262,
};

static const struct mf_rlefont_char_range_s mf_rlefont_HelveticaItalic_8_char_ranges[] = {
    {32, 95, mf_rlefont_HelveticaItalic_8_glyph_offsets_0, mf_rlefont_HelveticaItalic_8_glyph_data_0},
    {160, 96, mf_rlefont_HelveticaItalic_8_glyph_offsets_1, mf_rlefont_HelveticaItalic_8_glyph_data_1},
};

const struct mf_rlefont_s mf_rlefont_HelveticaItalic_8 = {
    {
    "-Fondu-Helvetica-Medium-I-Normal--10-100-75-75-P-46-MacRoman-1",
    "HelveticaItalic_8",
    9, /* width */
    10, /* height */
    2, /* min x advance */
    9, /* max x advance */
    1, /* baseline x */
    8, /* baseline y */
    10, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_HelveticaItalic_8_dictionary_data,
    mf_rlefont_HelveticaItalic_8_dictionary_offsets,
    35, /* rle dict count */
    80, /* total dict count */
    2, /* char range count */
    mf_rlefont_HelveticaItalic_8_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_HelveticaItalic_8_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_HelveticaItalic_8
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_HelveticaItalic_8_listentry)
#endif


/* End of automatically generated font definition for HelveticaItalic_8. */

