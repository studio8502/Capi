

/* Start of automatically generated font definition for HelveticaBold_8. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_HelveticaBold_8_dictionary_data[190] PROGMEM = {
    0x18, 0x04, 0x83, 0x80, 0x01, 0x06, 0x80, 0x08, 0x80, 0x02, 0x03, 0x81, 0x01, 0x81, 0x04, 0x05,
    0x81, 0x02, 0x81, 0x05, 0x81, 0x01, 0x08, 0x80, 0x08, 0x0c, 0x03, 0x80, 0x01, 0x80, 0x05, 0x81,
    0x03, 0x81, 0x14, 0x80, 0x0d, 0x81, 0x05, 0x80, 0x02, 0x80, 0x01, 0x13, 0x83, 0x02, 0x28, 0x02,
    0x80, 0x07, 0x80, 0x01, 0x81, 0x01, 0x80, 0x01, 0x02, 0x81, 0x05, 0x82, 0x13, 0x80, 0x01, 0x80,
    0x05, 0x04, 0x80, 0x82, 0x06, 0x81, 0x07, 0x80, 0x01, 0x04, 0x81, 0x04, 0x80, 0x04, 0x81, 0x01,
    0x0a, 0x80, 0x07, 0x81, 0x0f, 0x64, 0xe4, 0xa0, 0x1e, 0xe7, 0x90, 0xa5, 0x8d, 0x70, 0x64, 0x30,
    0x39, 0x22, 0x1e, 0x3b, 0x22, 0x22, 0x22, 0x87, 0x98, 0xf5, 0x25, 0x22, 0x22, 0x1a, 0x26, 0xe4,
    0x84, 0x1b, 0x3a, 0x1a, 0xea, 0x1c, 0x27, 0x85, 0x3b, 0x3b, 0x35, 0x3b, 0xe5, 0x26, 0x85, 0x93,
    0x6c, 0x26, 0x91, 0x30, 0x18, 0x37, 0x2a, 0x94, 0x22, 0x22, 0xc6, 0x9c, 0x18, 0x64, 0x35, 0xa3,
    0x00, 0xac, 0xf4, 0xb0, 0x24, 0x8b, 0xaa, 0x9f, 0xf4, 0x25, 0x8c, 0x25, 0x1c, 0x9f, 0x21, 0x36,
    0x00, 0x3b, 0x2a, 0x6c, 0x35, 0xc8, 0xa0, 0xa5, 0x93, 0xb0, 0xa5, 0x8d, 0x30, 0x1e, 0x39, 0xf4,
    0x1b, 0x1b, 0x1b, 0x1b, 0x1f, 0x1a, 0x36, 0x36, 0xf8, 0x99, 0xe4, 0x36, 0xe5, 0x9c,
};

static const uint16_t mf_rlefont_HelveticaBold_8_dictionary_offsets[77] PROGMEM = {
    0x0000, 0x0001, 0x0003, 0x0005, 0x000a, 0x000f, 0x0012, 0x0016,
    0x0019, 0x001a, 0x001c, 0x0020, 0x0022, 0x0024, 0x0026, 0x0028,
    0x002b, 0x002e, 0x002f, 0x0030, 0x0033, 0x0035, 0x0038, 0x003a,
    0x003c, 0x003d, 0x0040, 0x0041, 0x0043, 0x0044, 0x0046, 0x0049,
    0x004b, 0x004e, 0x0050, 0x0052, 0x0054, 0x0056, 0x0058, 0x005f,
    0x0061, 0x0064, 0x0069, 0x006b, 0x006d, 0x006f, 0x0072, 0x0074,
    0x0076, 0x0078, 0x007a, 0x007c, 0x0084, 0x0086, 0x0088, 0x008c,
    0x008f, 0x0090, 0x0092, 0x0094, 0x0097, 0x0098, 0x009a, 0x009c,
    0x009e, 0x00a0, 0x00a2, 0x00a5, 0x00ad, 0x00af, 0x00b1, 0x00b4,
    0x00b6, 0x00b8, 0x00ba, 0x00bc, 0x00be,
};

static const uint8_t mf_rlefont_HelveticaBold_8_glyph_data_0[679] PROGMEM = {
    0x02, 0x00, 0x10, 0x03, 0x46, 0x4a, 0x36, 0x45, 0x10, 0x04, 0x30, 0xc9, 0x51, 0x10, 0x06, 0x24,
    0x22, 0x8b, 0x48, 0xa3, 0x51, 0x10, 0x05, 0x20, 0x2b, 0x1e, 0x3d, 0x35, 0x2b, 0x3c, 0x2b, 0x10,
    0x06, 0x30, 0x9a, 0x6c, 0x2f, 0x59, 0xc5, 0x9a, 0x6c, 0x10, 0x06, 0x30, 0x92, 0x51, 0x35, 0x35,
    0x8b, 0x9a, 0x52, 0x10, 0x03, 0xf8, 0x5f, 0x10, 0x03, 0x62, 0x5e, 0x36, 0x10, 0x03, 0x3a, 0xf4,
    0x5e, 0x26, 0x10, 0x04, 0x24, 0x3b, 0x2b, 0x10, 0x06, 0x18, 0x1b, 0x2a, 0x80, 0x1b, 0x10, 0x03,
    0x29, 0x45, 0x26, 0x10, 0x04, 0x29, 0x3d, 0x10, 0x02, 0x18, 0x18, 0x60, 0x10, 0x04, 0x30, 0x88,
    0x26, 0x60, 0x1b, 0x10, 0x05, 0x24, 0x63, 0x3c, 0x4e, 0x10, 0x05, 0x30, 0x27, 0x2f, 0x49, 0x49,
    0x10, 0x05, 0x30, 0x8a, 0x6c, 0x3b, 0x35, 0x4a, 0xff, 0x10, 0x05, 0x00, 0x3f, 0x5a, 0x59, 0x5a,
    0x10, 0x05, 0x00, 0x24, 0x44, 0x43, 0x34, 0x4a, 0x10, 0x05, 0x24, 0x1e, 0x3d, 0x3b, 0x5a, 0x10,
    0x05, 0x24, 0x1e, 0x3d, 0x52, 0x52, 0x35, 0x10, 0x05, 0x28, 0x26, 0x2b, 0x44, 0x2b, 0x3b, 0x10,
    0x05, 0x24, 0x63, 0x63, 0x52, 0x52, 0x35, 0x10, 0x05, 0x30, 0x8a, 0x6c, 0x5a, 0x0f, 0x3b, 0x2f,
    0x10, 0x02, 0x00, 0x30, 0x5f, 0x45, 0x10, 0x03, 0x2a, 0x30, 0x5f, 0x45, 0x26, 0x10, 0x04, 0x2a,
    0x18, 0x38, 0x58, 0x1f, 0xfe, 0x10, 0x05, 0x18, 0x25, 0x87, 0x84, 0x19, 0x10, 0x04, 0x18, 0x94,
    0x1f, 0x86, 0x58, 0x10, 0x05, 0x32, 0x2f, 0x59, 0x35, 0x36, 0x45, 0x10, 0x08, 0x2a, 0x28, 0xc8,
    0xa8, 0xb0, 0x98, 0xa9, 0xae, 0x68, 0xa5, 0x10, 0x06, 0x24, 0x5c, 0x1c, 0xa3, 0x57, 0x10, 0x06,
    0x28, 0x1c, 0x93, 0x57, 0x7c, 0x10, 0x06, 0x53, 0x37, 0x49, 0x27, 0x19, 0x10, 0x06, 0x28, 0x57,
    0x57, 0x7c, 0x10, 0x05, 0x28, 0x23, 0x3b, 0x1e, 0x4a, 0xff, 0x10, 0x05, 0x28, 0x23, 0x3b, 0x1e,
    0x4a, 0x10, 0x06, 0x53, 0xe4, 0x87, 0x1c, 0x97, 0x19, 0x10, 0x06, 0xf4, 0x55, 0x47, 0xa3, 0x57,
    0x1c, 0x10, 0x03, 0x20, 0x49, 0x49, 0x49, 0x10, 0x05, 0x2a, 0x20, 0x49, 0x49, 0x5a, 0x10, 0x07,
    0x3f, 0xe7, 0xb0, 0x2f, 0x35, 0x1e, 0xc7, 0x6a, 0x10, 0x05, 0x3f, 0x4a, 0x49, 0xf4, 0x19, 0x10,
    0x08, 0x30, 0x67, 0x90, 0x6a, 0xa1, 0x82, 0x9d, 0x91, 0x6f, 0x10, 0x06, 0x30, 0xe7, 0x65, 0x5b,
    0x06, 0x24, 0x3e, 0x0f, 0x10, 0x06, 0x28, 0x57, 0xbc, 0x3c, 0x3b, 0x10, 0x06, 0x24, 0x3e, 0x87,
    0x26, 0x10, 0x06, 0x28, 0x23, 0x47, 0x93, 0x57, 0x10, 0x06, 0x24, 0x8b, 0x8a, 0x19, 0x84, 0x92,
    0x70, 0x2f, 0x10, 0x06, 0x30, 0xf3, 0x3c, 0x49, 0x49, 0x10, 0x06, 0x30, 0x9f, 0x57, 0x57, 0x74,
    0x10, 0x06, 0x30, 0x34, 0x43, 0x43, 0x2b, 0x10, 0x09, 0x30, 0xef, 0xb1, 0xb1, 0xb1, 0xb1, 0xb1,
    0x57, 0x10, 0x06, 0x3f, 0xe7, 0xb0, 0x3c, 0x85, 0x92, 0x57, 0x10, 0x07, 0x30, 0x34, 0x8a, 0x9a,
    0x19, 0x35, 0x49, 0x10, 0x06, 0x30, 0xe3, 0x3b, 0x35, 0x35, 0x4a, 0x34, 0x10, 0x03, 0x46, 0x5e,
    0x35, 0x10, 0x04, 0x20, 0x60, 0x5f, 0x5f, 0x10, 0x03, 0x32, 0x1d, 0x5e, 0x64, 0x10, 0x05, 0x24,
    0x2b, 0xc5, 0xa8, 0x10, 0x05, 0x18, 0x29, 0xe3, 0x10, 0x03, 0x84, 0x38, 0x26, 0x10, 0x06, 0x4c,
    0x4b, 0x05, 0x46, 0x4a, 0x63, 0x3c, 0x43, 0x0f, 0x10, 0x04, 0x4f, 0x49, 0x59, 0x10, 0x05, 0x32,
    0x49, 0x35, 0x85, 0x91, 0x6c, 0x5a, 0x0f, 0x10, 0x05, 0x4f, 0x40, 0x10, 0x05, 0x2a, 0x46, 0x1d,
    0x19, 0x4a, 0x49, 0x10, 0x05, 0x4c, 0x2d, 0x94, 0x87, 0x9e, 0x19, 0x3b, 0x2f, 0x10, 0x05, 0x46,
    0x4a, 0x63, 0x3c, 0x43, 0xfe, 0x10, 0x03, 0x2a, 0x59, 0x55, 0x49, 0x49, 0x10, 0x04, 0xf4, 0x59,
    0x55, 0x49, 0x49, 0x35, 0x10, 0x05, 0x46, 0x4a, 0x43, 0x1a, 0x52, 0x52, 0x10, 0x05, 0x32, 0x2f,
    0x49, 0x49, 0x49, 0x0f, 0x10, 0x07, 0x4c, 0xc9, 0x61, 0x61, 0x61, 0x61, 0x10, 0x05, 0x4c, 0x63,
    0x3c, 0x43, 0xfe, 0x10, 0x05, 0x4f, 0x4e, 0x10, 0x06, 0x4c, 0x5c, 0x57, 0xbc, 0x3c, 0x3b, 0x10,
    0x06, 0x00, 0x4c, 0x87, 0x9f, 0x57, 0x19, 0x49, 0x10, 0x05, 0x18, 0x51, 0x3c, 0x63, 0x4a, 0x10,
    0x05, 0x30, 0x3a, 0x87, 0x8a, 0x19, 0x3b, 0x2f, 0x10, 0x05, 0x20, 0xf5, 0x1d, 0x19, 0x35, 0x49,
    0x59, 0x10, 0x05, 0x4c, 0x41, 0x10, 0x05, 0x4c, 0x4e, 0x4d, 0x10, 0x06, 0x18, 0x94, 0x89, 0xae,
    0x19, 0x65, 0x8b, 0xa8, 0x10, 0x06, 0x4c, 0x47, 0x92, 0x57, 0x10, 0x05, 0x4c, 0x43, 0x2d, 0x2f,
    0x4a, 0x35, 0x10, 0x05, 0x18, 0x19, 0x3b, 0x35, 0x4a, 0xff, 0x10, 0x04, 0x20, 0x2b, 0x32, 0x58,
    0x5f, 0x36, 0x1f, 0x10, 0x03, 0x32, 0x5e, 0x4d, 0x10, 0x04, 0x3a, 0x5d, 0x36, 0x1b, 0x84, 0x2b,
    0x10, 0x07, 0x30, 0x30, 0x97, 0x68, 0x10,
};

static const uint16_t mf_rlefont_HelveticaBold_8_glyph_offsets_0[95] PROGMEM = {
    0x0000, 0x0003, 0x0009, 0x000e, 0x0016, 0x0020, 0x002a, 0x0034,
    0x0038, 0x003d, 0x0043, 0x0048, 0x004f, 0x0054, 0x0058, 0x005d,
    0x0064, 0x006a, 0x0071, 0x007a, 0x0081, 0x0089, 0x0090, 0x0098,
    0x00a0, 0x00a8, 0x00b1, 0x00b7, 0x00be, 0x00c6, 0x00cd, 0x00d4,
    0x00dc, 0x00e8, 0x00ef, 0x00f6, 0x00fd, 0x0103, 0x010b, 0x0112,
    0x011a, 0x0122, 0x0128, 0x012f, 0x0139, 0x0140, 0x014b, 0x0150,
    0x0155, 0x015c, 0x0162, 0x0169, 0x0173, 0x017a, 0x0181, 0x0188,
    0x0192, 0x019b, 0x01a4, 0x01ad, 0x01b2, 0x01b8, 0x01be, 0x01c4,
    0x01c9, 0x01ce, 0x01d1, 0x01d9, 0x01de, 0x01e8, 0x01ec, 0x01f4,
    0x01fe, 0x0206, 0x020d, 0x0215, 0x021d, 0x0225, 0x022d, 0x0234,
    0x0238, 0x0240, 0x0249, 0x0250, 0x0259, 0x0262, 0x0266, 0x026b,
    0x0275, 0x027b, 0x0283, 0x028b, 0x0294, 0x0299, 0x02a1,
};

static const uint8_t mf_rlefont_HelveticaBold_8_glyph_data_1[634] PROGMEM = {
    0x02, 0x00, 0x10, 0x03, 0x20, 0x5f, 0x84, 0x3a, 0x3b, 0x49, 0x10, 0x05, 0x32, 0x45, 0x37, 0x87,
    0x8a, 0x19, 0x1b, 0x10, 0x05, 0x00, 0x24, 0x44, 0x22, 0x59, 0x32, 0x98, 0x19, 0x10, 0x06, 0x30,
    0xd5, 0x2f, 0x4d, 0x44, 0x87, 0xa6, 0x10, 0x06, 0x24, 0x47, 0x00, 0x91, 0x80, 0x4a, 0x10, 0x02,
    0x20, 0x60, 0x45, 0x4d, 0x10, 0x05, 0x24, 0x1e, 0x35, 0x63, 0x85, 0x8e, 0x1d, 0x6c, 0x2f, 0x10,
    0x04, 0x30, 0x31, 0x10, 0x08, 0xf4, 0x59, 0x8b, 0xa7, 0xad, 0x8f, 0x89, 0x6d, 0x69, 0x9c, 0x80,
    0x10, 0x04, 0x3a, 0xe7, 0x1d, 0x51, 0x20, 0xbc, 0x10, 0x06, 0x20, 0x18, 0x48, 0x89, 0x51, 0x10,
    0x06, 0x18, 0x25, 0xc7, 0x26, 0x10, 0x04, 0x29, 0x3d, 0x10, 0x07, 0xf4, 0x59, 0x8b, 0xa7, 0x6d,
    0xa9, 0xaa, 0x98, 0x69, 0x94, 0x80, 0x10, 0x03, 0x3f, 0x10, 0x03, 0x30, 0xcb, 0x51, 0x3d, 0x10,
    0x04, 0x30, 0x3a, 0x3b, 0x2b, 0x20, 0x74, 0x10, 0x02, 0x3f, 0xe4, 0x58, 0x3b, 0x10, 0x02, 0x20,
    0x49, 0x32, 0x58, 0x10, 0x02, 0x62, 0x4d, 0x10, 0x05, 0x4c, 0x43, 0x86, 0xa2, 0x94, 0x22, 0x3b,
    0x10, 0x06, 0x84, 0x2f, 0x65, 0x89, 0xb2, 0x52, 0x4d, 0xc5, 0x48, 0x8e, 0x51, 0x10, 0x02, 0x84,
    0x18, 0x49, 0x10, 0x02, 0x18, 0x29, 0x3a, 0x3b, 0x10, 0x02, 0x24, 0x3b, 0x5f, 0x10, 0x04, 0x3a,
    0x87, 0x98, 0x2f, 0x20, 0xbc, 0x10, 0x06, 0x32, 0x84, 0x18, 0x48, 0x98, 0x51, 0x10, 0x07, 0x62,
    0xc8, 0xaa, 0x26, 0x86, 0x48, 0x48, 0x91, 0x78, 0x2b, 0x10, 0x07, 0x62, 0xf8, 0x9c, 0x86, 0x8e,
    0x51, 0x3b, 0x85, 0x8d, 0xa8, 0x59, 0x10, 0x07, 0x32, 0x1d, 0x66, 0x88, 0x98, 0x51, 0x84, 0x48,
    0x91, 0x78, 0x2b, 0x10, 0x05, 0x30, 0x3a, 0x1f, 0x00, 0x5f, 0x4a, 0x87, 0x06, 0x21, 0x55, 0x3c,
    0x47, 0xa3, 0x57, 0x10, 0x06, 0x27, 0x42, 0x3c, 0x47, 0xa3, 0x57, 0x10, 0x06, 0x27, 0x2b, 0x3b,
    0x3c, 0x47, 0xa3, 0x57, 0x10, 0x08, 0xe4, 0x55, 0x93, 0xa0, 0x94, 0x93, 0xa3, 0x1c, 0x7f, 0x10,
    0x06, 0x53, 0x37, 0x49, 0xf8, 0x2f, 0x44, 0x3b, 0x10, 0x05, 0x56, 0x1e, 0x35, 0x1e, 0x4a, 0xff,
    0x10, 0x05, 0x2d, 0x42, 0x1e, 0x35, 0x1e, 0x4a, 0xff, 0x10, 0x02, 0x00, 0x85, 0x84, 0x5e, 0x10,
    0x02, 0x0f, 0x86, 0x84, 0x5e, 0x10, 0x06, 0x30, 0xf2, 0x84, 0x91, 0xa0, 0x85, 0x91, 0x6c, 0x2f,
    0x10, 0x06, 0x48, 0xe4, 0x1d, 0x65, 0x5b, 0x06, 0x21, 0x84, 0x3a, 0x3e, 0x0f, 0x10, 0x06, 0x48,
    0x3a, 0x3e, 0x0f, 0x10, 0x05, 0x4c, 0xfe, 0x3c, 0x44, 0x5c, 0x10, 0x06, 0x30, 0xb2, 0x57, 0x21,
    0x8f, 0x70, 0x74, 0xa5, 0x10, 0x06, 0x56, 0xea, 0x57, 0x57, 0x74, 0x10, 0x06, 0x98, 0x25, 0xea,
    0x57, 0x57, 0x74, 0x10, 0x07, 0x94, 0x20, 0xb2, 0x65, 0x43, 0xff, 0x4a, 0x10, 0x06, 0x20, 0x49,
    0x5c, 0xbc, 0x3c, 0x3b, 0x10, 0x05, 0x30, 0xeb, 0x52, 0x2f, 0x35, 0x86, 0x9a, 0x51, 0x10, 0x05,
    0xf8, 0x84, 0x56, 0x4b, 0x05, 0x38, 0x56, 0x4b, 0x05, 0xf8, 0x36, 0x42, 0x4b, 0x05, 0x98, 0x94,
    0x42, 0x4b, 0x05, 0xf4, 0x36, 0x42, 0x4b, 0x05, 0xf8, 0x36, 0x2b, 0x3b, 0x4b, 0x07, 0x4c, 0xeb,
    0x52, 0x19, 0x95, 0x87, 0x80, 0x10, 0x04, 0x4f, 0x49, 0x59, 0x36, 0x35, 0x10, 0x05, 0x27, 0x1f,
    0x59, 0x35, 0x40, 0x10, 0x05, 0xe4, 0x2b, 0x55, 0x35, 0x40, 0x10, 0x05, 0x58, 0x42, 0x35, 0x40,
    0x10, 0x05, 0x62, 0x42, 0x35, 0x40, 0x10, 0x02, 0xf5, 0x36, 0x45, 0x4d, 0x60, 0x10, 0x02, 0xf8,
    0x36, 0x45, 0x4d, 0x60, 0x10, 0x02, 0xc6, 0x51, 0x45, 0x4d, 0x60, 0x10, 0x02, 0x32, 0x51, 0x45,
    0x4d, 0x60, 0x10, 0x05, 0x46, 0x44, 0x85, 0x8e, 0x2f, 0x52, 0x52, 0x35, 0x10, 0x05, 0x48, 0xc9,
    0x20, 0x92, 0x19, 0x52, 0x52, 0x52, 0x10, 0x05, 0x27, 0x1f, 0x59, 0x35, 0x4e, 0x10, 0x05, 0xe4,
    0x2b, 0x55, 0x35, 0x4e, 0x10, 0x05, 0x58, 0x42, 0x35, 0x4e, 0x10, 0x05, 0x98, 0x51, 0x55, 0x35,
    0x4e, 0x10, 0x05, 0x62, 0x42, 0x35, 0x4e, 0x10, 0x05, 0x30, 0x62, 0x20, 0xc0, 0x85, 0x3a, 0x10,
    0x05, 0xf4, 0x24, 0x2f, 0x52, 0x52, 0x52, 0x2f, 0x26, 0x10, 0x05, 0xf8, 0x84, 0x56, 0x41, 0x10,
    0x05, 0x38, 0x56, 0x41, 0x10, 0x05, 0x58, 0x1a, 0x25, 0x41, 0x10, 0x05, 0x62, 0x1a, 0x25, 0x41,
    0x10, 0x05, 0x38, 0x56, 0x43, 0x2d, 0x2f, 0x4a, 0x10, 0x05, 0x2a, 0x55, 0x59, 0x63, 0x3c, 0x43,
    0x63, 0x3d, 0x10, 0x05, 0x3a, 0x2d, 0x25, 0x4e, 0x4a, 0x10,
};

static const uint16_t mf_rlefont_HelveticaBold_8_glyph_offsets_1[96] PROGMEM = {
    0x0000, 0x0003, 0x000b, 0x0014, 0x001e, 0x0027, 0x002f, 0x0035,
    0x0040, 0x0044, 0x0051, 0x0059, 0x0060, 0x0066, 0x006a, 0x0077,
    0x007a, 0x0080, 0x0088, 0x008e, 0x0094, 0x0098, 0x00a1, 0x00ae,
    0x00b3, 0x00b9, 0x00be, 0x00c6, 0x00ce, 0x00da, 0x00e7, 0x00f4,
    0x00fc, 0x00fc, 0x0104, 0x0104, 0x0104, 0x010c, 0x0115, 0x0120,
    0x0129, 0x0129, 0x0131, 0x0131, 0x013a, 0x013a, 0x0140, 0x0140,
    0x0146, 0x0151, 0x0157, 0x0157, 0x015e, 0x015e, 0x015e, 0x0164,
    0x016b, 0x0175, 0x0175, 0x017c, 0x017c, 0x0184, 0x018d, 0x0195,
    0x019f, 0x01a4, 0x01a8, 0x01ad, 0x01b2, 0x01b7, 0x01bd, 0x01c6,
    0x01cd, 0x01d4, 0x01db, 0x01e1, 0x01e7, 0x01ee, 0x01f5, 0x01fc,
    0x0203, 0x020d, 0x0217, 0x021e, 0x0225, 0x022b, 0x0232, 0x0238,
    0x0240, 0x024a, 0x0250, 0x0255, 0x025b, 0x0261, 0x0269, 0x0273,
};

static const struct mf_rlefont_char_range_s mf_rlefont_HelveticaBold_8_char_ranges[] = {
    {32, 95, mf_rlefont_HelveticaBold_8_glyph_offsets_0, mf_rlefont_HelveticaBold_8_glyph_data_0},
    {160, 96, mf_rlefont_HelveticaBold_8_glyph_offsets_1, mf_rlefont_HelveticaBold_8_glyph_data_1},
};

const struct mf_rlefont_s mf_rlefont_HelveticaBold_8 = {
    {
    "-Fondu-Helvetica-Bold-R-Normal--10-100-75-75-P-47-MacRoman-1",
    "HelveticaBold_8",
    9, /* width */
    10, /* height */
    2, /* min x advance */
    9, /* max x advance */
    1, /* baseline x */
    8, /* baseline y */
    10, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_HelveticaBold_8_dictionary_data,
    mf_rlefont_HelveticaBold_8_dictionary_offsets,
    36, /* rle dict count */
    76, /* total dict count */
    2, /* char range count */
    mf_rlefont_HelveticaBold_8_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_HelveticaBold_8_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_HelveticaBold_8
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_HelveticaBold_8_listentry)
#endif


/* End of automatically generated font definition for HelveticaBold_8. */

