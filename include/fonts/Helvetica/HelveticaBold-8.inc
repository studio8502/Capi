

/* Start of automatically generated font definition for HelveticaBold_8. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_HelveticaBold_8_dictionary_data[240] PROGMEM = {
    0x04, 0x01, 0x80, 0x01, 0x80, 0x0f, 0x80, 0x0c, 0x01, 0x82, 0x04, 0x01, 0x81, 0x01, 0x09, 0x80,
    0x07, 0x01, 0x81, 0x06, 0x81, 0x01, 0x80, 0x05, 0x80, 0x02, 0x80, 0x05, 0x1c, 0x13, 0x81, 0x02,
    0x81, 0x05, 0x02, 0x80, 0x01, 0x04, 0x81, 0x05, 0x82, 0x04, 0x14, 0x80, 0x84, 0x03, 0x80, 0x05,
    0x81, 0x01, 0x80, 0x80, 0x03, 0x01, 0x81, 0x01, 0x81, 0x03, 0x80, 0x08, 0x80, 0x07, 0x15, 0x06,
    0x81, 0x06, 0x13, 0x24, 0x80, 0x01, 0x80, 0x05, 0x80, 0x01, 0x81, 0x80, 0x01, 0x82, 0x81, 0x04,
    0x81, 0x02, 0x02, 0x80, 0x03, 0x81, 0x03, 0x80, 0x02, 0x01, 0x80, 0x05, 0x80, 0x02, 0x80, 0x01,
    0x80, 0x04, 0x19, 0x39, 0xc9, 0x94, 0x1f, 0x36, 0x3e, 0x31, 0xa4, 0x39, 0x2e, 0x1f, 0x3e, 0x32,
    0x40, 0x2d, 0x1b, 0x20, 0x21, 0x28, 0x20, 0x33, 0x32, 0x1a, 0x39, 0x27, 0xd3, 0x94, 0x39, 0x2e,
    0x20, 0x21, 0x28, 0x20, 0x25, 0x88, 0xaa, 0xb4, 0x40, 0x2a, 0xba, 0xb4, 0x39, 0x2e, 0x1d, 0x86,
    0x97, 0x9c, 0x39, 0x1c, 0x24, 0x39, 0xca, 0xa4, 0x28, 0x2e, 0xba, 0xb4, 0xec, 0x31, 0x8e, 0x1b,
    0x40, 0x9a, 0xb4, 0x3e, 0x33, 0x2f, 0x2d, 0x1b, 0x20, 0x21, 0x35, 0xc9, 0x27, 0x37, 0x94, 0xc9,
    0x3d, 0x1b, 0x1f, 0x39, 0x37, 0x1e, 0xb4, 0xfe, 0x28, 0x21, 0x35, 0xc9, 0x36, 0xa4, 0xeb, 0xa4,
    0xca, 0x70, 0xb4, 0x37, 0x39, 0x3e, 0x3d, 0x31, 0xee, 0x2b, 0x1c, 0x29, 0x2b, 0x20, 0x20, 0x39,
    0x2e, 0x1d, 0x39, 0x2a, 0x2e, 0x2e, 0x33, 0x1c, 0x20, 0xff, 0x8a, 0x2e, 0x88, 0xa4, 0x31, 0x0f,
    0x31, 0x40, 0xd2, 0xa4, 0x21, 0xc9, 0x27, 0xd0, 0xcc, 0x1b, 0x2f, 0x3e, 0x3d, 0x31, 0xf4, 0x39,
};

static const uint16_t mf_rlefont_HelveticaBold_8_dictionary_offsets[88] PROGMEM = {
    0x0000, 0x0001, 0x0004, 0x0007, 0x0008, 0x000b, 0x000e, 0x000f,
    0x0011, 0x0014, 0x0019, 0x001c, 0x001d, 0x001f, 0x0022, 0x0025,
    0x0028, 0x002a, 0x002c, 0x002e, 0x0030, 0x0033, 0x0035, 0x003a,
    0x003e, 0x003f, 0x0040, 0x0042, 0x0043, 0x0044, 0x0049, 0x004b,
    0x004d, 0x004e, 0x0050, 0x0052, 0x0054, 0x0056, 0x0059, 0x005c,
    0x005e, 0x0062, 0x0064, 0x0067, 0x0069, 0x006b, 0x006d, 0x006f,
    0x0071, 0x0077, 0x0079, 0x0080, 0x0085, 0x008c, 0x0094, 0x0096,
    0x0099, 0x009c, 0x00a0, 0x00a4, 0x00a6, 0x00ad, 0x00af, 0x00b0,
    0x00b2, 0x00b4, 0x00b7, 0x00b9, 0x00bc, 0x00be, 0x00c0, 0x00c3,
    0x00c5, 0x00c8, 0x00cb, 0x00cd, 0x00cf, 0x00d6, 0x00d9, 0x00dc,
    0x00df, 0x00e2, 0x00e4, 0x00e7, 0x00e8, 0x00e9, 0x00ee, 0x00f0,
};

static const uint8_t mf_rlefont_HelveticaBold_8_glyph_data_0[594] PROGMEM = {
    0x02, 0x00, 0x10, 0x03, 0x1e, 0x20, 0x63, 0x3e, 0x1b, 0x2f, 0x04, 0x33, 0x42, 0x10, 0x05, 0x33,
    0xc9, 0x7c, 0x2b, 0x89, 0x80, 0x94, 0x68, 0x10, 0x05, 0x1b, 0x1f, 0x28, 0x20, 0x1c, 0x3c, 0x58,
    0xf2, 0x10, 0x06, 0x29, 0x89, 0x41, 0x1c, 0x74, 0xa4, 0x89, 0x41, 0x06, 0x29, 0x47, 0x25, 0xe2,
    0xa5, 0x40, 0xb0, 0x10, 0x03, 0x67, 0x3b, 0x10, 0x03, 0x31, 0x1b, 0x67, 0x60, 0x2f, 0x03, 0x53,
    0x67, 0x67, 0x03, 0x29, 0x31, 0x92, 0xa4, 0x10, 0x05, 0x23, 0x67, 0x38, 0x1f, 0x46, 0x02, 0x34,
    0x53, 0x04, 0x31, 0x34, 0x74, 0x10, 0x03, 0xfc, 0x53, 0x2f, 0x2f, 0x05, 0x62, 0x43, 0x5b, 0x27,
    0x05, 0x33, 0x26, 0xa4, 0x32, 0x63, 0x8a, 0x27, 0x05, 0x62, 0xee, 0x58, 0x25, 0x4f, 0x05, 0x62,
    0x41, 0x25, 0x6e, 0x41, 0x25, 0x05, 0x30, 0x47, 0x9a, 0xb4, 0x5d, 0x58, 0x05, 0x65, 0x1c, 0x27,
    0x91, 0x27, 0x05, 0x65, 0xfe, 0x32, 0x6a, 0x05, 0x4e, 0xec, 0x58, 0x25, 0x88, 0xb4, 0x10, 0x05,
    0x62, 0x43, 0x20, 0x6a, 0x05, 0x62, 0x41, 0x61, 0x9c, 0x74, 0x10, 0x02, 0x23, 0x46, 0x1b, 0x2f,
    0x04, 0x23, 0x22, 0xc8, 0xa4, 0x1e, 0x1f, 0x22, 0x05, 0x34, 0xe2, 0x1b, 0xc0, 0x10, 0x04, 0x23,
    0xc5, 0xa4, 0x1e, 0x1f, 0x1f, 0x1f, 0x05, 0x1e, 0x1c, 0x27, 0x20, 0xc6, 0x1b, 0x67, 0x09, 0x33,
    0xe2, 0xb7, 0xb4, 0xb6, 0x98, 0xa9, 0xb6, 0xb8, 0xa0, 0x06, 0x29, 0x64, 0x06, 0x24, 0x45, 0x5a,
    0x50, 0x39, 0x06, 0x33, 0xe2, 0xb4, 0x88, 0x63, 0xaa, 0xa4, 0x8b, 0x06, 0x4e, 0x50, 0x5e, 0x39,
    0x05, 0x4e, 0x4f, 0x20, 0x4f, 0x05, 0x4e, 0x4f, 0x20, 0x63, 0x06, 0x29, 0x8b, 0xaa, 0x27, 0xb0,
    0xa5, 0x8d, 0x7c, 0x10, 0x06, 0x24, 0x5e, 0x28, 0x66, 0x2e, 0x02, 0x53, 0x60, 0x2f, 0x05, 0xfc,
    0x49, 0x63, 0x5c, 0xca, 0x27, 0x06, 0x24, 0x8a, 0x43, 0x5d, 0x8b, 0x70, 0xb4, 0x90, 0x05, 0x49,
    0x20, 0x63, 0x4f, 0x08, 0x24, 0x9c, 0x8a, 0xb7, 0xa1, 0x82, 0x9d, 0x91, 0x6f, 0x10, 0x06, 0x24,
    0x4c, 0x88, 0x06, 0x29, 0x4d, 0x06, 0x4e, 0x50, 0x39, 0x63, 0x06, 0x29, 0x45, 0xaa, 0xb4, 0x88,
    0x2e, 0xc0, 0x10, 0x06, 0x4e, 0x50, 0x45, 0x2e, 0x06, 0x29, 0x8b, 0x4f, 0x3c, 0xa5, 0x5f, 0x1c,
    0x06, 0x24, 0x28, 0x63, 0x63, 0x36, 0x10, 0x06, 0x33, 0x66, 0x50, 0x5c, 0x39, 0x06, 0x24, 0x52,
    0x21, 0x32, 0x3e, 0x09, 0x24, 0xda, 0xb1, 0xb1, 0xb1, 0x70, 0xa6, 0x91, 0x70, 0x10, 0x06, 0x33,
    0x66, 0x00, 0x69, 0x45, 0x2e, 0x07, 0x24, 0x5f, 0x21, 0x35, 0x5d, 0x58, 0x06, 0x33, 0x38, 0x28,
    0x1c, 0x90, 0x27, 0x1c, 0x80, 0x10, 0x03, 0x49, 0x60, 0x46, 0xec, 0x10, 0x03, 0x53, 0x67, 0xf4,
    0x46, 0x03, 0x49, 0x67, 0x67, 0x3b, 0x10, 0x04, 0x29, 0x58, 0xa8, 0x10, 0x05, 0x00, 0x10, 0x03,
    0x86, 0xa4, 0x10, 0x05, 0x23, 0x28, 0x27, 0x38, 0x55, 0x45, 0x05, 0x1e, 0x63, 0x69, 0x52, 0x38,
    0x10, 0x04, 0x1e, 0x62, 0x20, 0x63, 0x25, 0x05, 0x1b, 0xc7, 0x27, 0x1c, 0x41, 0x41, 0x61, 0x05,
    0x23, 0x4b, 0x03, 0x44, 0xc5, 0x90, 0x74, 0x2b, 0x63, 0x63, 0x05, 0x23, 0x21, 0x5c, 0x1d, 0x74,
    0x58, 0x05, 0x1e, 0x63, 0x69, 0x52, 0x2c, 0x10, 0x02, 0x1e, 0x3e, 0x6d, 0x1f, 0x05, 0x1e, 0x63,
    0x43, 0x21, 0x32, 0x21, 0x40, 0x02, 0x1e, 0x60, 0x1f, 0x60, 0x2f, 0x07, 0x23, 0x9b, 0x9c, 0x89,
    0xaf, 0x9c, 0x89, 0xaf, 0x10, 0x05, 0x23, 0x5d, 0x52, 0x2c, 0x10, 0x05, 0x1e, 0x62, 0x43, 0x6a,
    0x05, 0x23, 0x5d, 0x52, 0x38, 0x10, 0x05, 0x23, 0x1c, 0x41, 0x41, 0x61, 0x03, 0x23, 0xc9, 0xb4,
    0x2b, 0x20, 0x63, 0x05, 0x23, 0x1c, 0x4f, 0x9c, 0x74, 0x10, 0x03, 0x1e, 0x88, 0x27, 0x5a, 0x90,
    0xa4, 0x58, 0x27, 0x05, 0x23, 0x5b, 0x3c, 0x47, 0x05, 0x23, 0x5b, 0x27, 0x3b, 0x10, 0x06, 0x23,
    0xd9, 0x94, 0x40, 0x2a, 0xc2, 0xa4, 0x88, 0x06, 0x23, 0x66, 0xf0, 0x2b, 0x66, 0x05, 0x23, 0x0f,
    0x52, 0x92, 0x27, 0x05, 0x23, 0x38, 0x58, 0x25, 0x4f, 0x04, 0x30, 0x1f, 0x2f, 0x1f, 0x67, 0x02,
    0xfc, 0x31, 0x6d, 0x46, 0x10, 0x04, 0x33, 0x0f, 0x1e, 0x2f, 0x22, 0x67, 0x05, 0xfc, 0x34, 0x91,
    0xb8, 0x10,
};

static const uint16_t mf_rlefont_HelveticaBold_8_glyph_offsets_0[95] PROGMEM = {
    0x0000, 0x0003, 0x000a, 0x000e, 0x0018, 0x0022, 0x002b, 0x0034,
    0x0038, 0x003e, 0x0042, 0x0048, 0x004e, 0x0051, 0x004e, 0x0056,
    0x005b, 0x0060, 0x0068, 0x006e, 0x0075, 0x007c, 0x0082, 0x0087,
    0x008f, 0x0094, 0x009b, 0x009b, 0x00a0, 0x00a8, 0x00ae, 0x00b6,
    0x00be, 0x00c9, 0x00cc, 0x00d2, 0x00db, 0x00e0, 0x00e5, 0x00ea,
    0x00f4, 0x00fa, 0x00fe, 0x0105, 0x010e, 0x0113, 0x011e, 0x0122,
    0x0125, 0x012a, 0x0133, 0x0138, 0x0140, 0x0147, 0x014d, 0x0153,
    0x015e, 0x0165, 0x016c, 0x0176, 0x017c, 0x0181, 0x0187, 0x018c,
    0x018f, 0x0193, 0x019a, 0x01a1, 0x01a7, 0x01af, 0x01b2, 0x01ba,
    0x01c1, 0x01c8, 0x01c8, 0x01cd, 0x01d5, 0x01db, 0x01e5, 0x01eb,
    0x01f0, 0x01f6, 0x01fc, 0x0203, 0x020a, 0x0213, 0x0218, 0x021e,
    0x0227, 0x022d, 0x0233, 0x0239, 0x023f, 0x0245, 0x024c,
};

static const uint8_t mf_rlefont_HelveticaBold_8_glyph_data_1[526] PROGMEM = {
    0x02, 0x00, 0x10, 0x03, 0x23, 0x60, 0x1e, 0x58, 0x10, 0x05, 0x30, 0x46, 0x5a, 0x4f, 0x3b, 0x10,
    0x05, 0x30, 0x47, 0x8a, 0xa4, 0x1f, 0x40, 0x5a, 0x05, 0x33, 0x3f, 0x86, 0x69, 0x3e, 0x1c, 0xa6,
    0x10, 0x06, 0x29, 0x8a, 0x2e, 0xb8, 0xb4, 0x5d, 0x58, 0x02, 0x53, 0x1e, 0x60, 0x1f, 0x05, 0x65,
    0x69, 0x42, 0x39, 0x02, 0x33, 0xf9, 0x10, 0x08, 0x1b, 0x93, 0x90, 0xa7, 0x9a, 0x90, 0xa6, 0x9a,
    0x90, 0x39, 0x93, 0x04, 0x31, 0xb4, 0x58, 0xd8, 0x1b, 0xbc, 0x10, 0x06, 0x34, 0x3b, 0x3e, 0x40,
    0xac, 0x10, 0x06, 0x34, 0x5a, 0xd4, 0x10, 0x04, 0x31, 0x34, 0x74, 0x10, 0x08, 0x1b, 0x93, 0x3d,
    0xa7, 0x9a, 0xb8, 0xa6, 0x9e, 0x90, 0x86, 0x93, 0x02, 0x24, 0x10, 0x03, 0x24, 0x68, 0xe0, 0x10,
    0x05, 0x30, 0x46, 0x5a, 0x57, 0x5a, 0x02, 0x49, 0x22, 0x22, 0x3c, 0x10, 0x02, 0x49, 0x20, 0xc8,
    0xa4, 0x10, 0x02, 0x1e, 0xc8, 0xa4, 0x10, 0x05, 0x23, 0x5b, 0xbc, 0x55, 0x86, 0x05, 0x4e, 0xdb,
    0x74, 0x3e, 0x8f, 0x94, 0x68, 0x02, 0x34, 0x63, 0x10, 0x02, 0x29, 0x31, 0x20, 0x67, 0x10, 0x04,
    0x1e, 0x69, 0x3e, 0x92, 0x1e, 0x74, 0x10, 0x06, 0x34, 0xee, 0x31, 0x8e, 0xac, 0x10, 0x07, 0x1e,
    0x88, 0xb5, 0x22, 0x42, 0x35, 0x8a, 0x7e, 0x10, 0x07, 0x1e, 0x88, 0xb5, 0x22, 0x42, 0x8b, 0xa8,
    0x94, 0x86, 0x07, 0x1e, 0x8a, 0xb5, 0x22, 0x40, 0x8e, 0x31, 0x35, 0x8a, 0x7e, 0x10, 0x05, 0x23,
    0x60, 0x1e, 0x46, 0x10, 0x06, 0x57, 0x3b, 0x64, 0x06, 0x26, 0x1a, 0x64, 0x06, 0xfc, 0x40, 0x3d,
    0xa4, 0x64, 0x08, 0x29, 0x2a, 0x1c, 0xbe, 0x7d, 0xa5, 0x5f, 0x7f, 0x10, 0x06, 0x33, 0xe2, 0xb4,
    0x88, 0x63, 0xaa, 0xa4, 0x8b, 0x05, 0x57, 0x5a, 0x4f, 0x20, 0x4f, 0x05, 0x8e, 0x1b, 0x5a, 0x4f,
    0x20, 0x4f, 0x02, 0x3e, 0x6d, 0x2f, 0x02, 0x40, 0x6d, 0x2f, 0x06, 0x33, 0x1c, 0xb8, 0xb4, 0x40,
    0x41, 0x41, 0x1c, 0x06, 0x26, 0x59, 0x4c, 0x88, 0x06, 0x57, 0x3b, 0x4d, 0x06, 0x26, 0x1a, 0x4d,
    0x05, 0x23, 0x0f, 0x5f, 0x69, 0x45, 0x10, 0x06, 0x29, 0x8f, 0x50, 0x89, 0x2e, 0x5a, 0x06, 0x57,
    0x50, 0x5e, 0x5c, 0x39, 0x06, 0x98, 0x1b, 0x50, 0x5e, 0x5c, 0x39, 0x07, 0x18, 0x59, 0x5f, 0x21,
    0x35, 0x5d, 0x58, 0x06, 0x49, 0x36, 0x45, 0x5a, 0x63, 0x05, 0x33, 0x5d, 0x35, 0x32, 0x21, 0x35,
    0x3e, 0x05, 0x3b, 0x1e, 0x4a, 0x05, 0x18, 0x1f, 0x4a, 0x05, 0x88, 0x94, 0x4a, 0x05, 0x26, 0x55,
    0x4a, 0x05, 0x31, 0x94, 0x4a, 0x05, 0x88, 0x94, 0x1f, 0x1f, 0x28, 0x27, 0x38, 0x55, 0x45, 0x07,
    0x23, 0x2a, 0x9c, 0xa5, 0x93, 0x41, 0x80, 0x10, 0x04, 0x1e, 0x62, 0x20, 0x63, 0x25, 0x05, 0x3b,
    0x1e, 0x48, 0x25, 0x05, 0x18, 0x1f, 0x48, 0x25, 0x05, 0x51, 0x4b, 0x05, 0x44, 0xe6, 0x1b, 0x4b,
    0x02, 0x1f, 0x22, 0x6d, 0x1f, 0x02, 0x22, 0x22, 0x6d, 0x1f, 0x02, 0x00, 0x1f, 0x40, 0x6d, 0x1f,
    0x02, 0x1e, 0x40, 0x6d, 0x1f, 0x05, 0x1e, 0x43, 0x20, 0x89, 0xb4, 0x2b, 0x6a, 0x05, 0x26, 0x55,
    0x1a, 0x3a, 0x74, 0x2b, 0x5b, 0x10, 0x05, 0x3b, 0x1e, 0x54, 0x05, 0x18, 0x1f, 0x54, 0x05, 0x51,
    0x20, 0x5b, 0x27, 0x05, 0x26, 0x55, 0x54, 0x05, 0x44, 0xe6, 0x1e, 0x27, 0x43, 0x6a, 0x05, 0x33,
    0x44, 0x1b, 0x7c, 0x1a, 0x10, 0x05, 0x33, 0x94, 0xb4, 0x2b, 0x5b, 0xbc, 0x10, 0x05, 0x3b, 0x1e,
    0x1a, 0x52, 0xff, 0x47, 0x05, 0x18, 0x1f, 0x1a, 0x52, 0xff, 0x47, 0x05, 0x51, 0x5b, 0x3c, 0x47,
    0x05, 0x44, 0xe6, 0x1b, 0x5b, 0x3c, 0x47, 0x05, 0x18, 0x1f, 0x1a, 0x52, 0x92, 0x27, 0x05, 0xc4,
    0x1b, 0x8a, 0xa4, 0x32, 0x5b, 0xbc, 0x10, 0x05, 0x00, 0x1e, 0x89, 0x44, 0x52, 0x63,
};

static const uint16_t mf_rlefont_HelveticaBold_8_glyph_offsets_1[96] PROGMEM = {
    0x0000, 0x0003, 0x0009, 0x0010, 0x0018, 0x0021, 0x0029, 0x002e,
    0x0033, 0x0037, 0x0043, 0x004b, 0x0052, 0x0057, 0x005c, 0x0068,
    0x006b, 0x0070, 0x0076, 0x007c, 0x0082, 0x0087, 0x008d, 0x0095,
    0x0000, 0x0099, 0x009f, 0x00a7, 0x00ae, 0x00b8, 0x00c2, 0x00ce,
    0x00d4, 0x00d4, 0x00d8, 0x00d8, 0x00d8, 0x00dc, 0x00e2, 0x00ec,
    0x00f5, 0x00f5, 0x00fb, 0x00fb, 0x0102, 0x0102, 0x0106, 0x0106,
    0x010a, 0x0113, 0x0118, 0x0118, 0x011c, 0x011c, 0x011c, 0x0120,
    0x0127, 0x012e, 0x012e, 0x0134, 0x0134, 0x013b, 0x0143, 0x0149,
    0x0151, 0x0155, 0x0159, 0x015d, 0x0161, 0x0165, 0x016f, 0x0178,
    0x017e, 0x0183, 0x0188, 0x018b, 0x0190, 0x0195, 0x019a, 0x01a0,
    0x01a5, 0x01ad, 0x01b6, 0x01ba, 0x01be, 0x01c3, 0x01c7, 0x01ce,
    0x01d5, 0x01dd, 0x01e4, 0x01eb, 0x01f0, 0x01f7, 0x01fe, 0x0207,
};

static const struct mf_rlefont_char_range_s mf_rlefont_HelveticaBold_8_char_ranges[] = {
    {32, 95, mf_rlefont_HelveticaBold_8_glyph_offsets_0, mf_rlefont_HelveticaBold_8_glyph_data_0},
    {160, 96, mf_rlefont_HelveticaBold_8_glyph_offsets_1, mf_rlefont_HelveticaBold_8_glyph_data_1},
};

const struct mf_rlefont_s mf_rlefont_HelveticaBold_8 = {
    {
    "-Fondu-Helvetica-Bold-R-Normal--8-80-75-75-P-47-MacRoman-1",
    "HelveticaBold_8",
    9, /* width */
    8, /* height */
    2, /* min x advance */
    9, /* max x advance */
    1, /* baseline x */
    6, /* baseline y */
    8, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_HelveticaBold_8_dictionary_data,
    mf_rlefont_HelveticaBold_8_dictionary_offsets,
    41, /* rle dict count */
    87, /* total dict count */
    2, /* char range count */
    mf_rlefont_HelveticaBold_8_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_HelveticaBold_8_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_HelveticaBold_8
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_HelveticaBold_8_listentry)
#endif


/* End of automatically generated font definition for HelveticaBold_8. */

