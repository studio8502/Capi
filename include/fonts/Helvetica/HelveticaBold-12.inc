

/* Start of automatically generated font definition for HelveticaBold_12. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_HelveticaBold_12_dictionary_data[395] PROGMEM = {
    0x09, 0x81, 0x01, 0x81, 0x02, 0x03, 0x81, 0x0c, 0x81, 0x0a, 0x81, 0x07, 0x82, 0x09, 0x82, 0x01,
    0x81, 0x11, 0x08, 0x83, 0x82, 0x08, 0x81, 0x01, 0x80, 0x0a, 0x0c, 0x08, 0x81, 0x01, 0x08, 0x80,
    0x0c, 0x80, 0x81, 0x08, 0x81, 0x01, 0x01, 0x81, 0x06, 0x81, 0x02, 0x0b, 0x81, 0x08, 0x85, 0x35,
    0x81, 0x1e, 0x81, 0x03, 0x80, 0x06, 0x81, 0x02, 0x07, 0x81, 0x02, 0x81, 0x02, 0x81, 0x02, 0x09,
    0x81, 0x01, 0x08, 0x82, 0x03, 0x81, 0x02, 0x81, 0x0b, 0x81, 0x0b, 0x81, 0x0b, 0x81, 0x01, 0x09,
    0x80, 0x0b, 0x80, 0x01, 0x83, 0x07, 0x80, 0x10, 0x01, 0x83, 0x14, 0x03, 0x81, 0x0a, 0x81, 0x13,
    0x3b, 0x03, 0x82, 0x03, 0x01, 0x81, 0x04, 0x81, 0x03, 0x82, 0x01, 0x82, 0x1d, 0x81, 0x02, 0x80,
    0x01, 0x80, 0x20, 0x81, 0x06, 0x81, 0x19, 0x05, 0x81, 0x0a, 0x81, 0x0b, 0x81, 0x03, 0x07, 0x81,
    0x01, 0x02, 0x81, 0x04, 0x33, 0x04, 0x80, 0xf4, 0x32, 0x4c, 0xfc, 0x1d, 0x27, 0xf0, 0x4a, 0xf0,
    0x28, 0x28, 0x41, 0x18, 0x38, 0x2e, 0x4c, 0xc4, 0x9f, 0xc7, 0xb0, 0xfc, 0x49, 0xa2, 0x2e, 0x24,
    0x36, 0x2e, 0x2e, 0x24, 0xdf, 0x2c, 0xb5, 0xa4, 0xb7, 0x2e, 0x4c, 0x26, 0x47, 0x48, 0x19, 0x4c,
    0x26, 0xc7, 0x48, 0x21, 0xeb, 0x2e, 0x1f, 0xe0, 0x38, 0x1a, 0x20, 0xea, 0x2d, 0x27, 0xfc, 0x49,
    0xba, 0x3a, 0xa2, 0x2e, 0x1b, 0x1b, 0xf4, 0xc3, 0x4c, 0x4b, 0x31, 0x34, 0xe8, 0x2e, 0x37, 0xe3,
    0x2d, 0x2f, 0x9c, 0x9c, 0x40, 0xb5, 0x48, 0x19, 0x48, 0xd3, 0x48, 0x9c, 0xa4, 0x3a, 0x1d, 0x30,
    0x49, 0x3b, 0x2e, 0x2e, 0x4c, 0x20, 0x47, 0xfc, 0xa2, 0x2e, 0x3f, 0x24, 0x37, 0xe1, 0x2e, 0x2e,
    0x2e, 0x4c, 0x20, 0x47, 0x28, 0x2e, 0x2e, 0xf9, 0x48, 0xc2, 0x4a, 0x3b, 0x3f, 0x28, 0x00, 0x1f,
    0x4b, 0x23, 0x41, 0x4c, 0x4b, 0x29, 0x34, 0xe8, 0x2c, 0xb5, 0x27, 0x27, 0x27, 0x27, 0x27, 0xea,
    0xc4, 0xba, 0x1f, 0x21, 0xfc, 0xc4, 0xac, 0xfc, 0xb7, 0xf7, 0x2e, 0x2e, 0x47, 0x4a, 0x40, 0x32,
    0xef, 0x24, 0xa4, 0xc0, 0xc4, 0x1a, 0x1b, 0x3a, 0xd0, 0x2f, 0xb7, 0x32, 0x28, 0x28, 0x37, 0xf1,
    0x3f, 0x24, 0xdf, 0x2e, 0x2e, 0x2e, 0x37, 0xdf, 0x27, 0xeb, 0xa4, 0xbd, 0x2d, 0x27, 0x1e, 0x3a,
    0x40, 0x23, 0x27, 0x27, 0x2b, 0xf7, 0x2e, 0x48, 0x33, 0x1b, 0xc4, 0x2e, 0x1f, 0x1e, 0x4a, 0x28,
    0x1b, 0x38, 0x4a, 0x33, 0x4b, 0x23, 0xf9, 0xd0, 0x22, 0x33, 0x1b, 0x33, 0x24, 0x44, 0x00, 0xcc,
    0x95, 0xa5, 0x2a, 0xf0, 0x2e, 0x4e, 0x3b, 0x1e, 0xfc, 0xa9, 0x2e, 0x2e, 0x1f, 0x3a, 0x00, 0x27,
    0x2e, 0x37, 0xe3, 0xc4, 0x4d, 0x2e, 0x1f, 0x3a, 0xf1, 0x40, 0x2f, 0x2f, 0x9c, 0x9c, 0x40, 0x27,
    0xe7, 0xc4, 0xa2, 0xf4, 0x1a, 0x1a, 0x3a, 0x3f, 0x2e, 0x2e, 0x2e,
};

static const uint16_t mf_rlefont_HelveticaBold_12_dictionary_offsets[126] PROGMEM = {
    0x0000, 0x0005, 0x0007, 0x0009, 0x000b, 0x000d, 0x000f, 0x0012,
    0x0014, 0x0018, 0x001a, 0x001b, 0x001e, 0x0020, 0x0022, 0x0026,
    0x002b, 0x002d, 0x002f, 0x0031, 0x0033, 0x0035, 0x0038, 0x003c,
    0x003f, 0x0042, 0x0044, 0x0048, 0x004f, 0x0051, 0x0054, 0x0055,
    0x0057, 0x0058, 0x005a, 0x005b, 0x005e, 0x0060, 0x0061, 0x0064,
    0x0066, 0x0069, 0x006a, 0x006c, 0x006e, 0x0070, 0x0072, 0x0073,
    0x0074, 0x0076, 0x0077, 0x0079, 0x007e, 0x0081, 0x0084, 0x0085,
    0x0087, 0x008a, 0x008c, 0x008f, 0x0092, 0x0095, 0x0097, 0x009b,
    0x009f, 0x00a5, 0x00ad, 0x00b5, 0x00b7, 0x00b8, 0x00be, 0x00c4,
    0x00c6, 0x00cb, 0x00d5, 0x00d9, 0x00dd, 0x00e0, 0x00e2, 0x00e7,
    0x00ea, 0x00ec, 0x00f5, 0x00f7, 0x00fc, 0x00fe, 0x0100, 0x0102,
    0x0106, 0x0108, 0x010a, 0x0114, 0x0117, 0x0119, 0x011c, 0x0120,
    0x0122, 0x0123, 0x0124, 0x0128, 0x012c, 0x012e, 0x0130, 0x0138,
    0x013f, 0x0142, 0x0144, 0x014d, 0x014f, 0x0151, 0x0153, 0x0156,
    0x0157, 0x015c, 0x015e, 0x0162, 0x0165, 0x0168, 0x016a, 0x016e,
    0x0170, 0x0178, 0x0179, 0x0183, 0x0187, 0x018b,
};

static const uint8_t mf_rlefont_HelveticaBold_12_glyph_data_0[795] PROGMEM = {
    0x04, 0x00, 0x10, 0x04, 0x65, 0x6c, 0x7c, 0x35, 0x80, 0x10, 0x05, 0x49, 0xac, 0x73, 0x73, 0x10,
    0x08, 0x00, 0x46, 0x73, 0x73, 0x29, 0xc4, 0xac, 0x73, 0x29, 0xc4, 0xac, 0x73, 0x10, 0x07, 0x49,
    0xa4, 0x1b, 0x26, 0xe9, 0xc4, 0x9a, 0x6d, 0x51, 0x37, 0xd8, 0x37, 0xd9, 0x1f, 0x35, 0x10, 0x0c,
    0x38, 0x25, 0xa7, 0x56, 0xe9, 0xc4, 0xb2, 0x25, 0x35, 0x42, 0x37, 0xba, 0x4a, 0xba, 0xa4, 0xbc,
    0x10, 0x09, 0x64, 0xf7, 0x7d, 0x1d, 0x6d, 0xc8, 0x32, 0xe7, 0x71, 0x48, 0xc0, 0x48, 0xb7, 0x10,
    0x03, 0x38, 0x25, 0x25, 0x25, 0x10, 0x06, 0x2b, 0x4b, 0xc4, 0x53, 0x33, 0x28, 0x10, 0x06, 0x65,
    0x2f, 0x30, 0x86, 0x30, 0x10, 0x06, 0xe4, 0x49, 0x21, 0xe3, 0x1d, 0x73, 0x10, 0x07, 0x22, 0x46,
    0x80, 0x29, 0x30, 0x1b, 0x10, 0x04, 0x3d, 0x3d, 0x6c, 0x25, 0x10, 0x05, 0x46, 0x4e, 0x6d, 0x10,
    0x04, 0x3d, 0x3d, 0x6c, 0x10, 0x04, 0x43, 0x28, 0x35, 0x4b, 0x24, 0x25, 0x7c, 0x10, 0x07, 0x57,
    0x4c, 0x94, 0x8e, 0x07, 0x43, 0x6d, 0x86, 0x1b, 0x10, 0x07, 0x57, 0x84, 0x5f, 0x4b, 0x29, 0x10,
    0x07, 0x57, 0x28, 0x1d, 0x1a, 0x7c, 0x5b, 0x10, 0x07, 0xf4, 0x65, 0xcb, 0xc4, 0xb8, 0x34, 0x68,
    0x2f, 0xc4, 0xb5, 0x37, 0xc3, 0x4b, 0x10, 0x07, 0x38, 0x1a, 0x20, 0x30, 0x1b, 0xeb, 0x7c, 0x8e,
    0x07, 0x57, 0xc4, 0x53, 0xeb, 0x2e, 0x8e, 0x07, 0xf4, 0x38, 0x29, 0x84, 0x84, 0x7c, 0x4b, 0x10,
    0x07, 0x57, 0x5b, 0x00, 0x6a, 0x8e, 0x07, 0x57, 0x55, 0x68, 0x36, 0x7c, 0x5b, 0x10, 0x04, 0x8c,
    0x46, 0x6c, 0x10, 0x04, 0x8c, 0x46, 0x6c, 0x25, 0x10, 0x07, 0x3d, 0x28, 0x1d, 0x30, 0x51, 0x1a,
    0x10, 0x07, 0x22, 0x3d, 0x29, 0x22, 0x29, 0x10, 0x07, 0x3d, 0x23, 0x51, 0x1a, 0x1d, 0x30, 0x10,
    0x08, 0x43, 0x75, 0x5f, 0x28, 0x80, 0x10, 0x0c, 0xc4, 0x49, 0xc2, 0x48, 0xa4, 0xc4, 0xc5, 0xcc,
    0xc8, 0x9a, 0x95, 0x96, 0xc6, 0xc9, 0x96, 0x8d, 0xc9, 0xc8, 0x9f, 0xa4, 0x22, 0xc2, 0x10, 0x08,
    0x2b, 0x00, 0x6d, 0x70, 0x6a, 0x37, 0xe3, 0x2d, 0x2f, 0x9c, 0x9c, 0x40, 0x1e, 0x09, 0x38, 0x1a,
    0x63, 0x62, 0x63, 0x62, 0x36, 0x10, 0x08, 0x82, 0x10, 0x09, 0x5d, 0x81, 0x81, 0x47, 0x1c, 0x3c,
    0x08, 0x49, 0x60, 0x6f, 0x10, 0x07, 0x49, 0x60, 0x26, 0x6e, 0x10, 0x0a, 0x2b, 0x0f, 0xc7, 0x40,
    0xc7, 0x53, 0xc0, 0x4a, 0x40, 0x2f, 0x8f, 0xca, 0xc4, 0xb3, 0x10, 0x09, 0x3a, 0x23, 0x8f, 0x81,
    0xea, 0xa4, 0xc3, 0x2d, 0x27, 0x81, 0x1e, 0x04, 0x65, 0x6c, 0x86, 0x10, 0x07, 0x3a, 0x7c, 0x7c,
    0x7c, 0x8e, 0x09, 0x49, 0x71, 0x50, 0x47, 0x1f, 0x6d, 0x18, 0x50, 0x8f, 0xf0, 0x10, 0x07, 0x00,
    0x38, 0x86, 0x4b, 0x29, 0x10, 0x0b, 0x3a, 0x23, 0x40, 0xca, 0x9c, 0x3e, 0xcb, 0xa0, 0xa0, 0xbc,
    0xc1, 0xb4, 0xae, 0xc5, 0xbf, 0xca, 0x2f, 0x9d, 0x9c, 0xb6, 0x10, 0x09, 0x49, 0x71, 0x48, 0xdd,
    0x48, 0x9d, 0xc4, 0xaf, 0xc5, 0xb0, 0x7f, 0x0a, 0x2b, 0x26, 0x52, 0x92, 0x10, 0x08, 0x38, 0x1a,
    0x63, 0x62, 0xd3, 0x48, 0x33, 0x10, 0x0a, 0x2b, 0x26, 0x52, 0x40, 0x2f, 0x4d, 0xaa, 0xca, 0x32,
    0xc7, 0x32, 0x29, 0x10, 0x09, 0x38, 0x1a, 0x63, 0x62, 0x36, 0x55, 0x00, 0x81, 0x1e, 0x09, 0x3a,
    0x34, 0x63, 0xb5, 0xc4, 0xa0, 0x51, 0x51, 0x2d, 0x27, 0xea, 0xc4, 0xc2, 0x10, 0x08, 0x00, 0x49,
    0xc2, 0x20, 0x1b, 0x86, 0x10, 0x09, 0x3a, 0x23, 0x8f, 0x72, 0x10, 0x08, 0x49, 0x4d, 0x76, 0x6a,
    0x89, 0x6d, 0x4b, 0x10, 0x0a, 0x3a, 0x2e, 0x7b, 0xd0, 0xcc, 0xaa, 0x56, 0xfd, 0xc7, 0x32, 0x6a,
    0x10, 0x08, 0x49, 0x4d, 0x76, 0x1f, 0x5f, 0x26, 0x52, 0xb4, 0x10, 0x08, 0x49, 0x4d, 0x76, 0x5b,
    0x6e, 0x1b, 0x10, 0x07, 0x3a, 0x37, 0xc3, 0x84, 0x5f, 0x28, 0x5f, 0x28, 0xe3, 0x10, 0x04, 0x49,
    0x3e, 0xc4, 0x53, 0x86, 0x10, 0x04, 0xf4, 0x80, 0x35, 0x7c, 0x00, 0x35, 0x35, 0x7c, 0x10, 0x04,
    0x38, 0x51, 0x86, 0x6e, 0x10, 0x07, 0x49, 0xa4, 0x51, 0x18, 0xfc, 0x71, 0x10, 0x07, 0x00, 0x10,
    0x04, 0xfc, 0x1a, 0x1a, 0x10, 0x07, 0x4e, 0x67, 0x28, 0x58, 0x10, 0x07, 0x49, 0x53, 0x7e, 0x7d,
    0x10, 0x07, 0x4e, 0x67, 0xc4, 0x53, 0xe4, 0x5b, 0x10, 0x07, 0x3a, 0x7c, 0x23, 0xe7, 0xc4, 0xbf,
    0x2e, 0x66, 0x10, 0x07, 0x4e, 0x67, 0x90, 0x05, 0x64, 0x6d, 0x6e, 0x6e, 0x10, 0x07, 0xfc, 0x4e,
    0xba, 0x69, 0x10, 0x07, 0x49, 0x53, 0x68, 0xdf, 0x55, 0x94, 0x10, 0x03, 0x49, 0x88, 0x10, 0x03,
    0x49, 0x88, 0x1b, 0x10, 0x07, 0x49, 0x53, 0xf0, 0x7d, 0x1f, 0x6d, 0x18, 0x50, 0xf0, 0x10, 0x03,
    0x49, 0x53, 0x86, 0x10, 0x0b, 0x4e, 0xb8, 0xa1, 0x32, 0x7b, 0x7b, 0x44, 0xb5, 0x74, 0x10, 0x07,
    0x2a, 0x68, 0xdf, 0x55, 0x94, 0x10, 0x07, 0x4e, 0x67, 0x6a, 0x8e, 0x07, 0x2a, 0x7e, 0x4c, 0x26,
    0x10, 0x07, 0xfc, 0x4e, 0xb2, 0x69, 0x10, 0x05, 0x2a, 0x68, 0x36, 0x31, 0x6e, 0x1b, 0x10, 0x07,
    0x4e, 0x67, 0xc4, 0xa0, 0x51, 0x51, 0x5b, 0x10, 0x05, 0xe4, 0x80, 0x6d, 0x1b, 0x7c, 0x7c, 0x45,
    0x1b, 0x10, 0x07, 0x8b, 0x2e, 0x66, 0x10, 0x08, 0x2a, 0x19, 0x5a, 0x00, 0x34, 0x10, 0x0b, 0x2a,
    0x74, 0x19, 0x74, 0xb4, 0xba, 0x56, 0xf1, 0x50, 0x1e, 0x07, 0x8b, 0x1f, 0x5f, 0x75, 0x10, 0x08,
    0x2a, 0x19, 0x5a, 0x1b, 0x35, 0x10, 0x06, 0x2a, 0x41, 0x84, 0x35, 0x5f, 0x28, 0x41, 0x10, 0x05,
    0x43, 0x6e, 0x5f, 0x1a, 0x33, 0x10, 0x04, 0x65, 0x6c, 0x86, 0x1b, 0x10, 0x05, 0x38, 0x28, 0x1a,
    0x33, 0x84, 0x33, 0x10, 0x07, 0x4e, 0x43, 0xd1, 0xc4, 0xbf, 0x10,
};

static const uint16_t mf_rlefont_HelveticaBold_12_glyph_offsets_0[95] PROGMEM = {
    0x0000, 0x0003, 0x000a, 0x0010, 0x001e, 0x002f, 0x0041, 0x0050,
    0x0056, 0x005e, 0x0065, 0x006d, 0x0075, 0x007b, 0x0080, 0x0085,
    0x008e, 0x0093, 0x0099, 0x00a0, 0x00a8, 0x00b7, 0x00c0, 0x00c7,
    0x00d0, 0x00d6, 0x00de, 0x00e3, 0x00e9, 0x00f1, 0x00f8, 0x0100,
    0x0107, 0x011f, 0x012d, 0x0136, 0x0139, 0x0140, 0x0145, 0x014b,
    0x015b, 0x0167, 0x016c, 0x0172, 0x017e, 0x0185, 0x019b, 0x01a7,
    0x01ad, 0x01b6, 0x01c4, 0x01ce, 0x01dd, 0x01e5, 0x01eb, 0x01f4,
    0x0201, 0x020b, 0x0213, 0x021e, 0x0225, 0x022f, 0x0235, 0x023d,
    0x0240, 0x0245, 0x024b, 0x0251, 0x0259, 0x0263, 0x0267, 0x026d,
    0x0273, 0x027b, 0x027f, 0x0284, 0x028f, 0x0294, 0x029f, 0x02a6,
    0x02ab, 0x02b1, 0x02b7, 0x02bf, 0x02c8, 0x02d2, 0x02d7, 0x02de,
    0x02e9, 0x02ef, 0x02f6, 0x02ff, 0x0306, 0x030c, 0x0314,
};

static const uint8_t mf_rlefont_HelveticaBold_12_glyph_data_1[705] PROGMEM = {
    0x04, 0x00, 0x10, 0x04, 0x8c, 0x24, 0x7c, 0x7c, 0x10, 0x07, 0x46, 0x35, 0x6d, 0x24, 0xa1, 0xc4,
    0x96, 0xc4, 0xac, 0x73, 0x1b, 0xf1, 0x1f, 0x34, 0x10, 0x07, 0x64, 0x26, 0x5f, 0x41, 0x30, 0x5f,
    0xf1, 0x7d, 0x10, 0x07, 0x2a, 0x2f, 0xc4, 0xa2, 0x89, 0x70, 0xc4, 0x67, 0x10, 0x07, 0x3a, 0x6a,
    0x89, 0x29, 0x30, 0x29, 0x30, 0x4b, 0x10, 0x04, 0x38, 0x1a, 0x33, 0x49, 0x7c, 0x7c, 0x10, 0x07,
    0x57, 0x1c, 0x51, 0x18, 0x50, 0xea, 0x7d, 0x1d, 0x51, 0x10, 0x05, 0x3a, 0x7d, 0x10, 0x0b, 0x2b,
    0xcb, 0xc4, 0xc5, 0xc6, 0xc8, 0xab, 0x8a, 0x45, 0xa4, 0x8a, 0xa0, 0xc6, 0xc8, 0xcc, 0xc4, 0xc2,
    0x10, 0x06, 0x3a, 0x31, 0x1a, 0x6d, 0x34, 0x83, 0x47, 0x10, 0x08, 0x00, 0x3d, 0x70, 0x7d, 0x7d,
    0x34, 0xd1, 0x89, 0x10, 0x08, 0x3d, 0x29, 0x25, 0x25, 0x25, 0x10, 0x05, 0x46, 0x4e, 0x6d, 0x10,
    0x0b, 0x2b, 0x41, 0x37, 0xa4, 0xc4, 0xbd, 0xc8, 0xc8, 0xc9, 0xc5, 0x9d, 0xc8, 0xc8, 0xc9, 0xa5,
    0x8d, 0xa4, 0xa4, 0x37, 0x36, 0x10, 0x04, 0x49, 0xc0, 0x10, 0x05, 0x46, 0x30, 0x70, 0x89, 0x1b,
    0x10, 0x07, 0x4e, 0x40, 0x23, 0x29, 0x34, 0x21, 0x83, 0x36, 0x10, 0x04, 0x65, 0xf1, 0x5f, 0xfc,
    0x6d, 0x10, 0x04, 0x65, 0xf1, 0x1b, 0x1a, 0x1d, 0x10, 0x04, 0xe4, 0x84, 0x10, 0x07, 0x8b, 0x6a,
    0x55, 0x41, 0x37, 0x9f, 0x48, 0x10, 0x07, 0x43, 0xeb, 0x48, 0xc9, 0xc4, 0xb3, 0x37, 0x9b, 0x48,
    0x77, 0xef, 0x34, 0xf9, 0x73, 0x73, 0x73, 0x10, 0x04, 0x3a, 0x3d, 0x6c, 0x10, 0x04, 0x3a, 0x3d,
    0x2a, 0x1a, 0x10, 0x04, 0x65, 0x41, 0x33, 0x10, 0x06, 0x00, 0x65, 0xef, 0x30, 0xc5, 0x2d, 0x22,
    0x6d, 0x10, 0x08, 0x3d, 0x89, 0x18, 0x7d, 0x7d, 0x89, 0x10, 0x0a, 0x49, 0x59, 0x68, 0x42, 0x4c,
    0x6b, 0x10, 0x0a, 0x49, 0x59, 0x68, 0xf6, 0xc7, 0x32, 0x50, 0x39, 0x10, 0x0a, 0x49, 0x71, 0xf4,
    0xb8, 0x8f, 0x26, 0xf7, 0xc4, 0xbb, 0x68, 0x42, 0x4c, 0x6b, 0x10, 0x08, 0xfc, 0x8c, 0xc4, 0x53,
    0x5f, 0xf0, 0x10, 0x08, 0xb4, 0x80, 0x6d, 0x61, 0x1e, 0x08, 0x19, 0x83, 0x84, 0x47, 0x61, 0x1e,
    0x08, 0x2c, 0x1e, 0x2d, 0x30, 0x6d, 0x61, 0x1e, 0x08, 0x00, 0xa8, 0x6e, 0x6d, 0x61, 0x1e, 0x0d,
    0x00, 0x2b, 0xc3, 0xb4, 0x68, 0xf0, 0x55, 0x39, 0xa7, 0xa3, 0xa4, 0x62, 0xf4, 0xc3, 0x10, 0x08,
    0x82, 0x1b, 0x10, 0x08, 0xe4, 0x3c, 0x60, 0x6f, 0x10, 0x08, 0x19, 0x1e, 0x60, 0x6f, 0x10, 0x04,
    0x88, 0x4b, 0x10, 0x04, 0xba, 0x3a, 0x53, 0x86, 0x10, 0x09, 0x5d, 0xca, 0xbc, 0x9d, 0xa4, 0x62,
    0xf0, 0x1c, 0x3c, 0x09, 0x2c, 0x1e, 0x4f, 0x62, 0xf5, 0xc7, 0xbc, 0x4d, 0xc0, 0x7f, 0x0a, 0x4a,
    0x38, 0x37, 0x20, 0x52, 0x92, 0x10, 0x0a, 0xb4, 0x1e, 0x4f, 0x20, 0x52, 0x92, 0x10, 0x0a, 0x4f,
    0x83, 0x26, 0x52, 0x92, 0x10, 0x0a, 0x32, 0x85, 0x26, 0x52, 0x92, 0x10, 0x07, 0x3d, 0x5b, 0x5f,
    0xf7, 0x2e, 0x10, 0x0a, 0x2b, 0xef, 0x48, 0x8f, 0x36, 0x4a, 0xb8, 0x56, 0x4d, 0x39, 0x8f, 0xf7,
    0xc4, 0xc2, 0x37, 0x10, 0x09, 0x4a, 0x22, 0x30, 0x8f, 0x72, 0x10, 0x09, 0x19, 0x1e, 0x9c, 0x8f,
    0x72, 0x10, 0x08, 0xe4, 0x3c, 0x4d, 0x76, 0x2e, 0x89, 0x6d, 0x6e, 0x10, 0x08, 0x65, 0x6c, 0x63,
    0x62, 0xd3, 0xc4, 0x6c, 0x10, 0x08, 0x43, 0x75, 0x55, 0x75, 0x55, 0x3c, 0x07, 0x00, 0x93, 0x44,
    0x20, 0x6c, 0x58, 0x10, 0x07, 0x7a, 0x67, 0x28, 0x58, 0x10, 0x07, 0x38, 0x54, 0x67, 0x28, 0x58,
    0x10, 0x07, 0x38, 0x77, 0x83, 0x26, 0x6c, 0x58, 0x10, 0x07, 0x5e, 0x28, 0x58, 0x10, 0x07, 0x3b,
    0xed, 0x1b, 0x3a, 0x67, 0x28, 0x58, 0x10, 0x0b, 0x00, 0x2a, 0xc1, 0xb4, 0x74, 0x2e, 0x4f, 0xc3,
    0xa7, 0x9d, 0x48, 0x74, 0xb4, 0xc1, 0x10, 0x07, 0x4e, 0x67, 0x4c, 0x6e, 0x68, 0xcb, 0x34, 0x10,
    0x07, 0x93, 0x67, 0x90, 0x07, 0x7a, 0x67, 0x90, 0x07, 0x38, 0x54, 0x67, 0x90, 0x07, 0x5e, 0x90,
    0x03, 0xc4, 0xc4, 0x3b, 0x88, 0x10, 0x03, 0xf4, 0x22, 0xc7, 0xc4, 0x88, 0x10, 0x03, 0xfc, 0x22,
    0x54, 0xb4, 0x86, 0x10, 0x03, 0xc4, 0x85, 0x83, 0x86, 0x10, 0x07, 0xc4, 0x18, 0x1c, 0x70, 0x28,
    0x34, 0x36, 0x6a, 0x8e, 0x07, 0x38, 0x77, 0x3f, 0x85, 0x68, 0xdf, 0x55, 0x94, 0x10, 0x07, 0x93,
    0x67, 0x6a, 0x8e, 0x07, 0x7a, 0x67, 0x6a, 0x8e, 0x07, 0x38, 0x54, 0x67, 0x6a, 0x8e, 0x07, 0x38,
    0x77, 0x83, 0x75, 0x2e, 0x8e, 0x07, 0x5e, 0x6a, 0x8e, 0x07, 0x38, 0x4e, 0x83, 0xd3, 0x85, 0x10,
    0x07, 0xf4, 0x4e, 0xb3, 0x50, 0xcb, 0xc4, 0xbb, 0x55, 0xea, 0xc4, 0xc1, 0x10, 0x07, 0x93, 0x74,
    0x6a, 0x66, 0x10, 0x07, 0x7a, 0x74, 0x6a, 0x66, 0x10, 0x07, 0x38, 0x54, 0x74, 0x6a, 0x66, 0x10,
    0x07, 0x38, 0x1a, 0x1e, 0x32, 0x6a, 0x66, 0x10, 0x08, 0x00, 0x7a, 0x45, 0xb5, 0x5a, 0x1b, 0x35,
    0x10, 0x07, 0x49, 0x53, 0x7e, 0x4c, 0x26, 0x10, 0x08, 0x38, 0x28, 0x1e, 0x71, 0x5a, 0x1b, 0x35,
    0x10,
};

static const uint16_t mf_rlefont_HelveticaBold_12_glyph_offsets_1[96] PROGMEM = {
    0x0000, 0x0003, 0x0009, 0x0019, 0x0023, 0x002d, 0x0037, 0x003f,
    0x004a, 0x004e, 0x0061, 0x006a, 0x0074, 0x007b, 0x0080, 0x0096,
    0x009a, 0x00a1, 0x00ab, 0x00b2, 0x00b9, 0x00bd, 0x00c6, 0x00d8,
    0x00dd, 0x00e3, 0x00e8, 0x00f2, 0x00fa, 0x0102, 0x010c, 0x011b,
    0x0123, 0x0123, 0x0129, 0x0130, 0x0129, 0x0138, 0x013f, 0x014f,
    0x0153, 0x0153, 0x0159, 0x0159, 0x015f, 0x015f, 0x0163, 0x0163,
    0x0169, 0x0173, 0x017e, 0x017e, 0x0186, 0x018e, 0x0195, 0x019c,
    0x01a3, 0x01b4, 0x01b4, 0x01bb, 0x01bb, 0x01c2, 0x01cc, 0x01d5,
    0x01dc, 0x01e4, 0x01ea, 0x01f1, 0x01f9, 0x01fe, 0x0207, 0x0217,
    0x0220, 0x0224, 0x0228, 0x022d, 0x0230, 0x0236, 0x023d, 0x0244,
    0x024a, 0x0254, 0x025e, 0x0263, 0x0268, 0x026e, 0x0275, 0x0279,
    0x0280, 0x028d, 0x0293, 0x0299, 0x02a0, 0x02a8, 0x02b1, 0x02b8,
};

static const struct mf_rlefont_char_range_s mf_rlefont_HelveticaBold_12_char_ranges[] = {
    {32, 95, mf_rlefont_HelveticaBold_12_glyph_offsets_0, mf_rlefont_HelveticaBold_12_glyph_data_0},
    {160, 96, mf_rlefont_HelveticaBold_12_glyph_offsets_1, mf_rlefont_HelveticaBold_12_glyph_data_1},
};

const struct mf_rlefont_s mf_rlefont_HelveticaBold_12 = {
    {
    "-Fondu-Helvetica-Bold-R-Normal--12-120-75-75-P-70-MacRoman-1",
    "HelveticaBold_12",
    13, /* width */
    12, /* height */
    3, /* min x advance */
    13, /* max x advance */
    1, /* baseline x */
    9, /* baseline y */
    12, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_HelveticaBold_12_dictionary_data,
    mf_rlefont_HelveticaBold_12_dictionary_offsets,
    56, /* rle dict count */
    125, /* total dict count */
    2, /* char range count */
    mf_rlefont_HelveticaBold_12_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_HelveticaBold_12_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_HelveticaBold_12
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_HelveticaBold_12_listentry)
#endif


/* End of automatically generated font definition for HelveticaBold_12. */

