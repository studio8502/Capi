

/* Start of automatically generated font definition for Helvetica_8. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_Helvetica_8_dictionary_data[194] PROGMEM = {
    0x07, 0x81, 0x80, 0x02, 0x80, 0x05, 0x0a, 0x06, 0x1c, 0x06, 0x80, 0x08, 0x80, 0x80, 0x01, 0x80,
    0x03, 0x09, 0x25, 0x80, 0x08, 0x80, 0x05, 0x08, 0x03, 0x80, 0x04, 0x05, 0x80, 0x07, 0x01, 0x81,
    0x06, 0x06, 0x80, 0x05, 0x03, 0x80, 0x01, 0x80, 0x81, 0x05, 0x80, 0x08, 0x83, 0x03, 0x19, 0x80,
    0x10, 0x0c, 0x12, 0x13, 0x81, 0x01, 0x14, 0x81, 0x03, 0x82, 0x80, 0x01, 0x80, 0x03, 0x05, 0x80,
    0x01, 0x80, 0x14, 0x80, 0x02, 0x82, 0x04, 0x05, 0x80, 0x03, 0x81, 0x1e, 0x01, 0x81, 0x80, 0x06,
    0x01, 0x80, 0x02, 0x02, 0x80, 0x0f, 0x19, 0x19, 0x19, 0xea, 0x1b, 0x21, 0x33, 0x1e, 0x3e, 0x24,
    0x3f, 0x23, 0x92, 0xe9, 0x39, 0x86, 0x98, 0x34, 0x18, 0x86, 0x95, 0x8c, 0x3f, 0x22, 0xc7, 0x26,
    0xf2, 0x19, 0x19, 0x19, 0x25, 0x1d, 0x22, 0x21, 0x33, 0xa8, 0x00, 0x8c, 0x3f, 0xa5, 0x36, 0x1d,
    0x22, 0x39, 0x86, 0xa0, 0x39, 0x1f, 0x2e, 0x92, 0x8c, 0xfe, 0x1f, 0x1e, 0x2c, 0x98, 0xa5, 0x8e,
    0xc6, 0x24, 0xc9, 0xb4, 0x85, 0x95, 0x8c, 0xe8, 0x1b, 0xc9, 0x39, 0xe5, 0xb1, 0x27, 0x85, 0x19,
    0x19, 0xc5, 0x8c, 0x8d, 0x3d, 0x23, 0xce, 0x3e, 0x1d, 0x22, 0x21, 0x33, 0x2b, 0x24, 0x22, 0x8b,
    0x88, 0xa5, 0x3e, 0x39, 0x86, 0xa0, 0x24, 0xd0, 0x1b, 0x19, 0x19, 0xfc, 0x94, 0x3d, 0x8f, 0x33,
    0x8c, 0x1d,
};

static const uint16_t mf_rlefont_Helvetica_8_dictionary_offsets[78] PROGMEM = {
    0x0000, 0x0002, 0x0006, 0x0007, 0x0008, 0x0009, 0x000d, 0x0011,
    0x0012, 0x0013, 0x0017, 0x0018, 0x001b, 0x001e, 0x0021, 0x0024,
    0x0028, 0x002c, 0x002e, 0x002f, 0x0031, 0x0032, 0x0033, 0x0034,
    0x0036, 0x0038, 0x003a, 0x003d, 0x003e, 0x0042, 0x0043, 0x0045,
    0x0046, 0x0047, 0x0049, 0x004b, 0x004c, 0x004e, 0x0050, 0x0053,
    0x0055, 0x005c, 0x005e, 0x0060, 0x0063, 0x0069, 0x006c, 0x006e,
    0x0071, 0x0073, 0x0075, 0x0078, 0x007a, 0x007c, 0x007e, 0x0081,
    0x0086, 0x0089, 0x008b, 0x008d, 0x0090, 0x0097, 0x0099, 0x009b,
    0x009e, 0x00a1, 0x00a3, 0x00a4, 0x00a6, 0x00a7, 0x00ab, 0x00ad,
    0x00af, 0x00b2, 0x00b8, 0x00bb, 0x00bf, 0x00c2,
};

static const uint8_t mf_rlefont_Helvetica_8_glyph_data_0[652] PROGMEM = {
    0x02, 0x00, 0x10, 0x02, 0x2e, 0x4e, 0x2b, 0xfe, 0x10, 0x03, 0x2e, 0x1e, 0x41, 0x27, 0x10, 0x05,
    0x2a, 0x27, 0x39, 0x93, 0x41, 0x80, 0x34, 0x10, 0x05, 0x2e, 0x55, 0xcb, 0x23, 0x39, 0x5b, 0x92,
    0x5f, 0x07, 0x2e, 0x9b, 0x27, 0x86, 0x8f, 0x34, 0xa5, 0x8e, 0x78, 0x10, 0x06, 0x2d, 0x55, 0x56,
    0xc8, 0x98, 0xa5, 0x8a, 0x6c, 0x10, 0x02, 0x21, 0x10, 0x03, 0x1a, 0x42, 0x5d, 0xd4, 0x10, 0x03,
    0x22, 0x46, 0x5d, 0x23, 0x5e, 0x03, 0x2a, 0xd4, 0x18, 0x59, 0x10, 0x05, 0x3b, 0x21, 0xc2, 0x1d,
    0x10, 0x02, 0x2a, 0x20, 0x46, 0x59, 0x10, 0x03, 0x2a, 0x30, 0x10, 0x02, 0x3b, 0x3b, 0xd4, 0x10,
    0x02, 0x35, 0x21, 0xcc, 0x4a, 0x10, 0x05, 0x30, 0x62, 0x48, 0x3c, 0x10, 0x05, 0x2e, 0x55, 0xe7,
    0x4a, 0x10, 0x05, 0x2e, 0x25, 0x19, 0x23, 0x23, 0x23, 0x7c, 0x10, 0x05, 0x30, 0xc4, 0x94, 0x39,
    0x5b, 0x4c, 0xb4, 0x10, 0x05, 0x2e, 0x46, 0x3d, 0x25, 0xd3, 0x1d, 0x10, 0x05, 0x2d, 0xe0, 0x1d,
    0x5b, 0x4c, 0xb4, 0x10, 0x05, 0x50, 0xfc, 0x74, 0x62, 0x3c, 0x10, 0x05, 0x2d, 0xf2, 0x21, 0xe8,
    0x64, 0x10, 0x05, 0x2e, 0x25, 0x49, 0x48, 0x3c, 0x10, 0x05, 0x30, 0x62, 0x3c, 0x21, 0x3c, 0x10,
    0x02, 0x20, 0xfd, 0x35, 0x39, 0x10, 0x02, 0x20, 0xfd, 0x2a, 0x21, 0x46, 0x05, 0x00, 0x1c, 0x42,
    0x5b, 0x39, 0x10, 0x04, 0x20, 0xeb, 0x1a, 0x74, 0x10, 0x05, 0x1c, 0x51, 0x5b, 0x8c, 0x39, 0x10,
    0x05, 0x1c, 0x25, 0x8c, 0x5f, 0x3f, 0x10, 0x09, 0x2e, 0x80, 0x23, 0x8e, 0x97, 0xa9, 0x8e, 0x93,
    0x3d, 0x7c, 0x10, 0x06, 0x35, 0x54, 0xfe, 0x10, 0x06, 0x30, 0x85, 0x96, 0x74, 0x62, 0x37, 0x10,
    0x06, 0x50, 0x3e, 0x46, 0x3d, 0x43, 0x10, 0x06, 0x2d, 0xa2, 0x4c, 0x45, 0x86, 0x95, 0x7c, 0x10,
    0x06, 0x30, 0x28, 0x37, 0x64, 0x37, 0x10, 0x05, 0x30, 0x28, 0x37, 0x64, 0x10, 0x06, 0x50, 0x00,
    0x39, 0x4d, 0x8c, 0x43, 0x10, 0x06, 0x2d, 0xc6, 0xa5, 0x8c, 0x80, 0x4c, 0x45, 0xfe, 0x10, 0x02,
    0x2d, 0x5d, 0xec, 0x10, 0x04, 0x00, 0x35, 0x4e, 0x3d, 0x56, 0x10, 0x06, 0x2e, 0x96, 0x94, 0x85,
    0x8a, 0x74, 0x62, 0x10, 0x05, 0x2e, 0x5d, 0x31, 0x10, 0x07, 0x2d, 0x88, 0xa5, 0x91, 0x53, 0x53,
    0x10, 0x06, 0x2d, 0xc6, 0xa5, 0x8d, 0x53, 0xe8, 0x8a, 0xa6, 0x10, 0x06, 0x50, 0x45, 0x3e, 0x43,
    0x10, 0x06, 0x2d, 0xe0, 0x62, 0x37, 0x1d, 0x10, 0x06, 0x50, 0x45, 0x3e, 0x43, 0xc4, 0x5b, 0x06,
    0x2d, 0xe0, 0x62, 0x37, 0x62, 0x10, 0x06, 0x2e, 0xa0, 0x94, 0x18, 0x5b, 0x94, 0x74, 0x10, 0x04,
    0x2d, 0xd2, 0x4a, 0xec, 0x10, 0x06, 0x2d, 0x3e, 0x45, 0x45, 0xf6, 0x74, 0x10, 0x06, 0x35, 0x48,
    0x48, 0x56, 0x10, 0x07, 0x2d, 0x96, 0x96, 0x96, 0x96, 0xa6, 0x91, 0xa8, 0x4b, 0x10, 0x06, 0x35,
    0x48, 0x3c, 0x18, 0x62, 0x10, 0x06, 0x2e, 0x40, 0x10, 0x06, 0x35, 0x29, 0x24, 0x3d, 0x42, 0xe2,
    0x10, 0x02, 0x1f, 0x25, 0x5d, 0xcc, 0x18, 0x10, 0x02, 0x2d, 0x4e, 0x3e, 0x64, 0x10, 0x02, 0x22,
    0x8a, 0x24, 0x5d, 0xf0, 0x10, 0x05, 0x2a, 0x4c, 0x39, 0x86, 0xa6, 0x10, 0x05, 0x33, 0x3b, 0x20,
    0x80, 0x10, 0x03, 0x5b, 0x10, 0x04, 0x1c, 0x47, 0x63, 0x10, 0x05, 0x1a, 0x21, 0x31, 0x62, 0xcd,
    0x74, 0x10, 0x04, 0x1c, 0x25, 0x4e, 0x3c, 0x10, 0x05, 0x1a, 0x23, 0x4c, 0xb4, 0x58, 0x8d, 0x74,
    0x10, 0x04, 0x1c, 0x61, 0x10, 0x03, 0x22, 0x94, 0x26, 0xa0, 0x4a, 0x10, 0x05, 0x1f, 0x30, 0x58,
    0x3c, 0x21, 0x3c, 0x10, 0x05, 0x1a, 0x21, 0x31, 0x62, 0x48, 0x10, 0x02, 0x1a, 0x2b, 0x5d, 0x10,
    0x02, 0xc4, 0x5f, 0x55, 0x5d, 0x46, 0x04, 0x38, 0x64, 0x86, 0x90, 0x39, 0x85, 0x98, 0x34, 0x10,
    0x02, 0x1a, 0x4e, 0x36, 0x64, 0x10, 0x06, 0x1c, 0x29, 0x53, 0x53, 0x10, 0x05, 0x2a, 0x31, 0x62,
    0x48, 0x10, 0x05, 0x1f, 0x30, 0x62, 0x49, 0x10, 0x05, 0x1c, 0xcb, 0x4c, 0x58, 0x8b, 0x5e, 0x05,
    0x1f, 0x50, 0x58, 0x3c, 0x21, 0x10, 0x03, 0x2a, 0x41, 0x9c, 0x64, 0x10, 0x04, 0x1c, 0x8a, 0x23,
    0x39, 0x21, 0x3c, 0x10, 0x03, 0xc4, 0x1d, 0x18, 0x59, 0x64, 0x10, 0x04, 0x1c, 0x44, 0x10, 0x05,
    0x2a, 0x8c, 0x58, 0x56, 0x10, 0x06, 0x2a, 0xec, 0x8e, 0x53, 0x41, 0x27, 0x10, 0x05, 0x1c, 0x48,
    0x3c, 0x62, 0x10, 0x04, 0x1c, 0x48, 0x49, 0x42, 0x10, 0x04, 0x1c, 0x8b, 0x24, 0xc5, 0x23, 0x74,
    0x10, 0x02, 0xe8, 0x64, 0x18, 0x22, 0x4e, 0xfe, 0x10, 0x02, 0x2e, 0x4e, 0x4e, 0x2b, 0x02, 0x85,
    0x4c, 0x64, 0x59, 0x26, 0x8c, 0x39, 0x10, 0x06, 0x20, 0x96, 0x6c, 0x10,
};

static const uint16_t mf_rlefont_Helvetica_8_glyph_offsets_0[95] PROGMEM = {
    0x0000, 0x0003, 0x0009, 0x000f, 0x0018, 0x0021, 0x002c, 0x0036,
    0x0039, 0x003f, 0x0045, 0x004b, 0x0051, 0x0057, 0x005b, 0x0060,
    0x0066, 0x006c, 0x0072, 0x007b, 0x0084, 0x008c, 0x0094, 0x009b,
    0x00a2, 0x00a9, 0x00b0, 0x00b6, 0x00bc, 0x00c3, 0x00c9, 0x00d0,
    0x00d7, 0x00e3, 0x00e8, 0x00f0, 0x00f7, 0x0100, 0x0107, 0x010d,
    0x0115, 0x011f, 0x0124, 0x012b, 0x0134, 0x0139, 0x0141, 0x014b,
    0x0151, 0x0158, 0x015f, 0x0166, 0x016f, 0x0175, 0x017d, 0x0183,
    0x018e, 0x0195, 0x0199, 0x01a1, 0x01a8, 0x01ae, 0x01b5, 0x01bc,
    0x01c2, 0x01c5, 0x01ca, 0x01d2, 0x01d8, 0x01e1, 0x01e5, 0x01ec,
    0x01f4, 0x01fb, 0x0200, 0x0206, 0x0210, 0x0216, 0x021c, 0x0222,
    0x0228, 0x022f, 0x0236, 0x023c, 0x0244, 0x024b, 0x024f, 0x0255,
    0x025d, 0x0263, 0x0269, 0x0271, 0x0279, 0x027e, 0x0287,
};

static const uint8_t mf_rlefont_Helvetica_8_glyph_data_1[609] PROGMEM = {
    0x02, 0x00, 0x10, 0x02, 0x2a, 0x5e, 0x5d, 0x10, 0x05, 0x35, 0x21, 0x98, 0x24, 0xce, 0x1d, 0x10,
    0x05, 0x00, 0x30, 0x26, 0xa0, 0x26, 0x23, 0x7c, 0x10, 0x04, 0x2a, 0x43, 0xfc, 0x98, 0x39, 0x87,
    0xa6, 0x10, 0x06, 0x2a, 0xec, 0x8c, 0x41, 0x80, 0x1d, 0x10, 0x02, 0x2e, 0x4e, 0x33, 0x64, 0x10,
    0x05, 0x50, 0x1b, 0x25, 0x49, 0x3f, 0x21, 0x37, 0x10, 0x02, 0x2d, 0xed, 0x10, 0x07, 0x2e, 0xa2,
    0x23, 0x57, 0x3f, 0x6c, 0xa6, 0x94, 0x7c, 0x10, 0x03, 0x2d, 0x47, 0x2c, 0x31, 0x10, 0x05, 0x20,
    0xfe, 0x86, 0x8e, 0x34, 0x10, 0x06, 0x20, 0x93, 0x1d, 0x10, 0x03, 0x2a, 0x30, 0x10, 0x07, 0x2e,
    0xa2, 0x23, 0x57, 0xe9, 0x98, 0xa7, 0x94, 0x7c, 0x10, 0x02, 0x2d, 0x37, 0x10, 0x03, 0x2d, 0x55,
    0x56, 0x10, 0x05, 0x3b, 0x3d, 0x93, 0x5f, 0xf3, 0x10, 0x02, 0x2e, 0x5b, 0xcc, 0x18, 0x10, 0x02,
    0x2d, 0xcb, 0x39, 0x21, 0x3c, 0x10, 0x02, 0x2e, 0x59, 0x10, 0x04, 0x20, 0x1e, 0x41, 0x41, 0x31,
    0x1d, 0x10, 0x05, 0x2d, 0xf2, 0xa5, 0x1e, 0xb0, 0x39, 0x1e, 0x41, 0x41, 0x41, 0x27, 0x10, 0x02,
    0x33, 0x20, 0x1d, 0x10, 0x02, 0x3b, 0x20, 0x26, 0x46, 0x02, 0x2e, 0x85, 0x90, 0x1d, 0x10, 0x03,
    0x2d, 0x8b, 0x41, 0x31, 0x2c, 0x31, 0x10, 0x05, 0x20, 0xc9, 0x34, 0x34, 0x10, 0x07, 0x2e, 0x3d,
    0x8a, 0xa5, 0x88, 0x98, 0x85, 0x91, 0x78, 0x59, 0x10, 0x07, 0x2d, 0xfe, 0x18, 0x23, 0x19, 0xa1,
    0x4c, 0xa6, 0x23, 0x31, 0x10, 0x07, 0x2d, 0xcb, 0x39, 0x8d, 0x41, 0x9a, 0x85, 0x91, 0x78, 0x59,
    0x10, 0x05, 0x3b, 0x2b, 0x42, 0x49, 0x10, 0x06, 0x5e, 0x54, 0xfe, 0x10, 0x06, 0xfc, 0x52, 0x54,
    0xfe, 0x10, 0x06, 0x3f, 0x42, 0x54, 0xfe, 0x10, 0x08, 0x2d, 0x31, 0x87, 0x87, 0x98, 0x39, 0x29,
    0x19, 0x7d, 0x10, 0x06, 0x50, 0x45, 0x38, 0x43, 0x33, 0x42, 0x06, 0xd4, 0x2c, 0x7c, 0x24, 0xf2,
    0x64, 0x37, 0x10, 0x06, 0x5e, 0x93, 0x23, 0x74, 0x64, 0x37, 0x10, 0x06, 0xfc, 0x52, 0x93, 0x23,
    0x74, 0x64, 0x37, 0x10, 0x02, 0x00, 0x2b, 0x5d, 0xec, 0x10, 0x02, 0x52, 0x5d, 0xec, 0x10, 0x06,
    0x30, 0x3d, 0x8d, 0xa0, 0x58, 0x37, 0x10, 0x06, 0xd8, 0x2c, 0x88, 0xa5, 0x8d, 0x53, 0xe8, 0x8a,
    0xa6, 0x10, 0x06, 0x5e, 0x60, 0xfc, 0x45, 0xf6, 0x74, 0x10, 0x06, 0xfc, 0x52, 0x60, 0xfc, 0x45,
    0xf6, 0x74, 0x10, 0x05, 0x20, 0x49, 0xea, 0x4b, 0x10, 0x06, 0x22, 0x26, 0x93, 0x88, 0xa5, 0x4d,
    0x8e, 0x90, 0x65, 0x28, 0x10, 0x06, 0xcc, 0x1a, 0x4c, 0x45, 0x45, 0xf6, 0x74, 0x10, 0x06, 0xd8,
    0x1a, 0x4c, 0x45, 0x45, 0xf6, 0x74, 0x10, 0x06, 0x4c, 0x2c, 0x40, 0x10, 0x06, 0x00, 0x2c, 0x1d,
    0x60, 0xcc, 0x7c, 0x39, 0x10, 0x06, 0x2d, 0x9c, 0x4b, 0x34, 0x62, 0xe9, 0x5f, 0x04, 0x51, 0x2b,
    0x47, 0x63, 0x10, 0x04, 0x23, 0x5e, 0x47, 0x63, 0x10, 0x04, 0x55, 0x52, 0x47, 0x63, 0x10, 0x04,
    0xea, 0xa5, 0x8a, 0x2c, 0x47, 0x63, 0x10, 0x04, 0x1a, 0x52, 0x47, 0x63, 0x10, 0x04, 0xc8, 0x39,
    0x42, 0x47, 0x63, 0x10, 0x06, 0x2a, 0x9c, 0x85, 0x98, 0x7c, 0xa5, 0x86, 0x70, 0x10, 0x04, 0x1c,
    0x25, 0x4e, 0x25, 0x42, 0x04, 0x00, 0x86, 0x5f, 0x61, 0x10, 0x04, 0x23, 0x5e, 0x61, 0x10, 0x04,
    0x55, 0x52, 0x61, 0x10, 0x04, 0x1a, 0x52, 0x61, 0x10, 0x02, 0x3d, 0x5e, 0x5d, 0x10, 0x02, 0x55,
    0x2b, 0x5d, 0x10, 0x02, 0xf6, 0x1b, 0x52, 0x5d, 0x10, 0x02, 0x1f, 0x52, 0x5d, 0x10, 0x05, 0x00,
    0x49, 0x32, 0x18, 0x58, 0x49, 0x10, 0x05, 0xd8, 0x34, 0x2c, 0x31, 0x62, 0x48, 0x10, 0x05, 0x46,
    0x51, 0x18, 0x62, 0x49, 0x10, 0x05, 0x4c, 0x5f, 0x3c, 0x62, 0x49, 0x10, 0x05, 0x55, 0x52, 0x3c,
    0x62, 0x49, 0x10, 0x05, 0xd8, 0x39, 0x51, 0x18, 0x62, 0x49, 0x10, 0x05, 0xc4, 0x39, 0x46, 0x18,
    0x62, 0x49, 0x10, 0x05, 0x2a, 0x5f, 0xd3, 0x1a, 0x39, 0x10, 0x05, 0x00, 0x35, 0x23, 0x29, 0x96,
    0x94, 0x87, 0x9a, 0x74, 0x39, 0x10, 0x04, 0x51, 0x2b, 0x44, 0x10, 0x04, 0x23, 0x5e, 0x44, 0x10,
    0x04, 0x55, 0x52, 0x44, 0x10, 0x04, 0x1a, 0x52, 0x44, 0x10, 0x04, 0x4c, 0x5f, 0x48, 0x49, 0x42,
    0x10, 0x05, 0x2d, 0x86, 0x74, 0x62, 0x19, 0x8b, 0x5e, 0x04, 0xc4, 0x34, 0x22, 0x62, 0x49, 0x42,
    0x10,
};

static const uint16_t mf_rlefont_Helvetica_8_glyph_offsets_1[96] PROGMEM = {
    0x0000, 0x0003, 0x0008, 0x0010, 0x0019, 0x0022, 0x002a, 0x0030,
    0x0039, 0x003d, 0x0048, 0x004e, 0x0055, 0x005a, 0x005e, 0x0069,
    0x006d, 0x0072, 0x0079, 0x007f, 0x0086, 0x008a, 0x0092, 0x009f,
    0x00a4, 0x00a9, 0x00af, 0x00b7, 0x00bd, 0x00c9, 0x00d5, 0x00e1,
    0x00e7, 0x00e7, 0x00ec, 0x00ec, 0x00ec, 0x00f2, 0x00f8, 0x0103,
    0x010a, 0x0113, 0x011b, 0x011b, 0x0124, 0x0124, 0x012a, 0x012a,
    0x012f, 0x0137, 0x0142, 0x0142, 0x014a, 0x014a, 0x014a, 0x0153,
    0x0159, 0x0165, 0x0165, 0x016e, 0x016e, 0x0177, 0x017c, 0x0185,
    0x018d, 0x0193, 0x0199, 0x019f, 0x01a7, 0x01ad, 0x01b4, 0x01be,
    0x01c4, 0x01ca, 0x01cf, 0x01d4, 0x01d9, 0x01de, 0x01e3, 0x01e9,
    0x01ee, 0x01f6, 0x01fe, 0x0205, 0x020c, 0x0213, 0x021b, 0x0223,
    0x022a, 0x0236, 0x023b, 0x0240, 0x0245, 0x024a, 0x0251, 0x0259,
};

static const struct mf_rlefont_char_range_s mf_rlefont_Helvetica_8_char_ranges[] = {
    {32, 95, mf_rlefont_Helvetica_8_glyph_offsets_0, mf_rlefont_Helvetica_8_glyph_data_0},
    {160, 96, mf_rlefont_Helvetica_8_glyph_offsets_1, mf_rlefont_Helvetica_8_glyph_data_1},
};

const struct mf_rlefont_s mf_rlefont_Helvetica_8 = {
    {
    "-Fondu-Helvetica-Medium-R-Normal--10-100-75-75-P-45-MacRoman-1",
    "Helvetica_8",
    9, /* width */
    10, /* height */
    2, /* min x advance */
    9, /* max x advance */
    0, /* baseline x */
    8, /* baseline y */
    10, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_Helvetica_8_dictionary_data,
    mf_rlefont_Helvetica_8_dictionary_offsets,
    40, /* rle dict count */
    77, /* total dict count */
    2, /* char range count */
    mf_rlefont_Helvetica_8_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_Helvetica_8_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_Helvetica_8
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_Helvetica_8_listentry)
#endif


/* End of automatically generated font definition for Helvetica_8. */

