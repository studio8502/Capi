

/* Start of automatically generated font definition for HelveticaItalic_8. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_HelveticaItalic_8_dictionary_data[230] PROGMEM = {
    0x07, 0x80, 0x01, 0x0c, 0x14, 0x80, 0x01, 0x82, 0x04, 0x14, 0x83, 0x03, 0x80, 0x01, 0x80, 0x08,
    0x80, 0x15, 0x05, 0x80, 0x03, 0x80, 0x03, 0x06, 0x80, 0x27, 0x80, 0x05, 0x81, 0x06, 0x80, 0x03,
    0x80, 0x01, 0x81, 0x81, 0x01, 0x1f, 0x80, 0x03, 0x80, 0x01, 0x02, 0x80, 0x05, 0x04, 0x83, 0x02,
    0x82, 0x80, 0x07, 0x80, 0x06, 0x07, 0x02, 0x80, 0x01, 0x80, 0x01, 0x80, 0x06, 0x80, 0x08, 0x80,
    0x07, 0x10, 0x01, 0x80, 0x05, 0x80, 0x02, 0x80, 0x04, 0x04, 0x80, 0x01, 0x02, 0x80, 0x80, 0x02,
    0x14, 0x1a, 0x01, 0x80, 0x01, 0x80, 0x04, 0x80, 0xd4, 0x18, 0x39, 0xd2, 0x36, 0xcb, 0x36, 0x1e,
    0x00, 0x24, 0xfd, 0x24, 0x36, 0x18, 0x18, 0x33, 0x31, 0x35, 0xd0, 0x22, 0x1e, 0x84, 0xf4, 0xa3,
    0x21, 0x2a, 0xfe, 0x2a, 0x21, 0x3c, 0x9c, 0x2d, 0x2b, 0xbc, 0x3c, 0x1e, 0x1e, 0xed, 0x20, 0x2c,
    0x3a, 0x25, 0xfd, 0x18, 0x1d, 0x22, 0x88, 0xaa, 0xb4, 0x88, 0x9d, 0x8c, 0x87, 0x2a, 0x18, 0x18,
    0xdc, 0x30, 0x2b, 0x92, 0x1d, 0x22, 0x38, 0x36, 0x24, 0xfd, 0x22, 0x36, 0x19, 0x31, 0x21, 0x3c,
    0x8c, 0xa6, 0x36, 0x2b, 0x1b, 0x3b, 0x22, 0xcb, 0x36, 0x35, 0xf3, 0x96, 0x1f, 0x25, 0x31, 0x33,
    0x3b, 0x38, 0xb4, 0x00, 0x1e, 0x0f, 0x19, 0x26, 0x36, 0xfc, 0x3c, 0x1d, 0x22, 0x35, 0xce, 0x22,
    0x24, 0x24, 0x96, 0xc8, 0x1d, 0x26, 0x1e, 0x3c, 0x88, 0x9c, 0x22, 0x30, 0x00, 0x25, 0x1d, 0x19,
    0x00, 0x9c, 0xfe, 0x22, 0x24, 0x35, 0x3b, 0x2f, 0x2b, 0x00, 0x2a, 0x1f, 0x2a, 0x92, 0x3c, 0x21,
    0x3c, 0x1b, 0x2b, 0x8d, 0x00, 0xa0,
};

static const uint16_t mf_rlefont_HelveticaItalic_8_dictionary_offsets[86] PROGMEM = {
    0x0000, 0x0003, 0x0004, 0x0007, 0x0009, 0x000b, 0x000f, 0x0011,
    0x0012, 0x0014, 0x0017, 0x0019, 0x001a, 0x001c, 0x001f, 0x0021,
    0x0023, 0x0025, 0x0026, 0x002a, 0x002d, 0x002e, 0x0030, 0x0031,
    0x0035, 0x0036, 0x0039, 0x003c, 0x0041, 0x0042, 0x0049, 0x004c,
    0x004e, 0x0050, 0x0051, 0x0052, 0x0055, 0x0058, 0x005a, 0x005d,
    0x0060, 0x0062, 0x0064, 0x0068, 0x006e, 0x0072, 0x0077, 0x007d,
    0x007f, 0x0082, 0x0084, 0x0086, 0x008e, 0x0090, 0x0096, 0x0099,
    0x009b, 0x009d, 0x00a5, 0x00a7, 0x00ab, 0x00ac, 0x00af, 0x00b1,
    0x00b3, 0x00b5, 0x00b7, 0x00b9, 0x00bb, 0x00c1, 0x00c3, 0x00c5,
    0x00c7, 0x00ca, 0x00cc, 0x00ce, 0x00d0, 0x00d2, 0x00d5, 0x00d7,
    0x00d9, 0x00db, 0x00df, 0x00e2, 0x00e4, 0x00e6,
};

static const uint8_t mf_rlefont_HelveticaItalic_8_glyph_data_0[579] PROGMEM = {
    0x02, 0x00, 0x10, 0x03, 0x1f, 0x49, 0x33, 0x58, 0x10, 0x03, 0x1a, 0x4e, 0x10, 0x06, 0x1f, 0x41,
    0xa3, 0x36, 0x3c, 0x2d, 0x4a, 0x86, 0x05, 0x30, 0x61, 0x25, 0x2b, 0x87, 0x64, 0x36, 0x65, 0x07,
    0x1f, 0x97, 0x98, 0x3c, 0x41, 0xd8, 0x3c, 0x8e, 0xb6, 0x10, 0x06, 0x1f, 0x62, 0x65, 0xde, 0x64,
    0x57, 0xc6, 0x02, 0x2b, 0x5f, 0x10, 0x03, 0x1f, 0x67, 0xc8, 0x33, 0x03, 0x34, 0x8c, 0x4c, 0x4c,
    0x61, 0x03, 0x19, 0xe5, 0xb4, 0x57, 0x10, 0x05, 0x00, 0x3a, 0x5f, 0x22, 0x8b, 0x5f, 0x10, 0x02,
    0x34, 0x23, 0x58, 0x10, 0x05, 0x2c, 0x23, 0x74, 0x10, 0x02, 0x34, 0x42, 0xfe, 0x10, 0x05, 0x55,
    0xcc, 0x5b, 0x5a, 0x65, 0x05, 0x00, 0x1f, 0x57, 0x49, 0x56, 0x10, 0x05, 0x55, 0x84, 0x87, 0x8a,
    0x5f, 0x1b, 0x05, 0x55, 0x20, 0x49, 0x36, 0x65, 0x05, 0x1f, 0x52, 0x4e, 0xe3, 0x61, 0x40, 0x05,
    0x1c, 0x2c, 0x86, 0xb4, 0x49, 0x36, 0x65, 0x05, 0x55, 0xdc, 0x5d, 0x36, 0x65, 0x05, 0x1c, 0x1e,
    0x84, 0x52, 0x4c, 0x10, 0x05, 0x55, 0x74, 0x20, 0x6b, 0xb4, 0x10, 0x05, 0x55, 0x00, 0x8c, 0x57,
    0x60, 0x10, 0x02, 0x3a, 0x8c, 0x3a, 0x61, 0x05, 0x23, 0xc6, 0x3d, 0x1e, 0x10, 0x06, 0x23, 0x8b,
    0x30, 0x74, 0x10, 0x05, 0x23, 0xe5, 0x61, 0x2f, 0x05, 0x19, 0x58, 0x24, 0x3d, 0x61, 0x58, 0x10,
    0x09, 0x39, 0x27, 0x8b, 0x87, 0x6d, 0xa9, 0xae, 0x78, 0xb5, 0x10, 0x06, 0x1f, 0x52, 0x5d, 0x44,
    0x21, 0x06, 0x1c, 0x20, 0x2b, 0x1b, 0x68, 0x6a, 0x06, 0x3e, 0x31, 0x2b, 0x5f, 0x47, 0x87, 0x06,
    0x1c, 0x20, 0x21, 0x68, 0x5b, 0x6a, 0x06, 0x19, 0x1e, 0x46, 0x1b, 0x05, 0x1c, 0x3c, 0x30, 0x92,
    0x8c, 0x33, 0x06, 0x3e, 0x5b, 0x84, 0xb6, 0xb5, 0x2b, 0x1b, 0x06, 0x1a, 0x88, 0xa6, 0x74, 0xa7,
    0x5a, 0x5b, 0x21, 0x04, 0x34, 0x33, 0xe6, 0x4a, 0x52, 0x10, 0x06, 0x39, 0x47, 0x65, 0xf2, 0x84,
    0x47, 0x21, 0x04, 0x34, 0x42, 0xf2, 0x10, 0x07, 0x1a, 0x88, 0xa6, 0x64, 0xa7, 0x9e, 0xb8, 0x68,
    0x8e, 0x06, 0x1a, 0x4b, 0x10, 0x06, 0x3e, 0x45, 0x40, 0x1b, 0x06, 0x39, 0x53, 0xfc, 0x5f, 0x10,
    0x06, 0x3e, 0x27, 0x5a, 0xa8, 0xa6, 0x91, 0x7c, 0x10, 0x06, 0x39, 0x53, 0x20, 0x6b, 0x10, 0x06,
    0x3e, 0x5b, 0x87, 0xb4, 0x36, 0x2b, 0x1b, 0x04, 0x1c, 0x33, 0x24, 0x5f, 0x10, 0x06, 0x1a, 0x51,
    0x06, 0x1a, 0x5b, 0x6b, 0x4a, 0x52, 0x10, 0x08, 0x1a, 0x96, 0x96, 0x96, 0x8f, 0x98, 0x3c, 0x6b,
    0x06, 0x39, 0xe5, 0x60, 0xc4, 0x62, 0x5b, 0x21, 0x06, 0x19, 0x58, 0x6b, 0x4a, 0x67, 0x06, 0x1c,
    0x2f, 0x40, 0x2b, 0x2b, 0x80, 0x10, 0x03, 0x34, 0xb4, 0x4c, 0x56, 0x10, 0x02, 0x34, 0x8c, 0x33,
    0x2b, 0x5f, 0x10, 0x03, 0x34, 0x64, 0x4c, 0x56, 0x10, 0x05, 0x1f, 0x52, 0x4e, 0x10, 0x05, 0x00,
    0x10, 0x03, 0x37, 0x58, 0x10, 0x04, 0x3a, 0x4d, 0x1b, 0x04, 0x19, 0xc5, 0x5f, 0x4f, 0x35, 0x96,
    0x74, 0x10, 0x04, 0x48, 0xe6, 0x5f, 0x58, 0x24, 0x04, 0x30, 0x4c, 0x20, 0x4e, 0x47, 0x52, 0x24,
    0x04, 0x48, 0x40, 0x3f, 0x24, 0x03, 0x19, 0x8a, 0x21, 0x74, 0x18, 0x56, 0x10, 0x04, 0x48, 0x66,
    0x4f, 0x24, 0x05, 0x84, 0x61, 0x52, 0x25, 0x6b, 0x31, 0x35, 0x02, 0x30, 0x50, 0x42, 0x04, 0x84,
    0x33, 0x47, 0x86, 0x92, 0x36, 0x35, 0x02, 0x19, 0x24, 0x21, 0x42, 0x06, 0xf4, 0x3a, 0x9f, 0x1d,
    0x68, 0x89, 0xae, 0x36, 0x89, 0x05, 0x39, 0x58, 0x25, 0x6b, 0x31, 0x35, 0x05, 0x48, 0x5b, 0x5a,
    0x65, 0x04, 0x39, 0x58, 0x4f, 0x66, 0x57, 0x10, 0x03, 0x3a, 0x4a, 0x57, 0x4c, 0x10, 0x04, 0x48,
    0x2c, 0x64, 0x30, 0x57, 0x10, 0x03, 0x39, 0xc6, 0x7c, 0x33, 0x24, 0xb4, 0x10, 0x04, 0x3a, 0x5c,
    0x05, 0x3a, 0xcc, 0x66, 0x67, 0x06, 0xf4, 0x3a, 0x99, 0x1d, 0x86, 0x99, 0x7c, 0x20, 0x88, 0x05,
    0x39, 0x58, 0x5e, 0x84, 0x52, 0x35, 0x04, 0x3a, 0x43, 0x04, 0x3a, 0x6c, 0x30, 0x2f, 0xc6, 0x74,
    0x10, 0x03, 0x1f, 0x67, 0x37, 0x49, 0x61, 0x03, 0x34, 0x21, 0x33, 0x8a, 0x3d, 0x10, 0x06, 0x23,
    0x8f, 0xb8, 0x10,
};

static const uint16_t mf_rlefont_HelveticaItalic_8_glyph_offsets_0[95] PROGMEM = {
    0x0000, 0x0003, 0x0009, 0x000d, 0x0016, 0x001f, 0x002a, 0x0032,
    0x0036, 0x003b, 0x0041, 0x0047, 0x004f, 0x0054, 0x004f, 0x0059,
    0x005e, 0x0064, 0x006b, 0x0072, 0x0078, 0x007f, 0x0087, 0x008d,
    0x0094, 0x009b, 0x00a2, 0x00a2, 0x00a7, 0x00ad, 0x00b3, 0x00b8,
    0x00c0, 0x00cb, 0x00d1, 0x00d8, 0x00df, 0x00e6, 0x00eb, 0x00f2,
    0x00fa, 0x0059, 0x0103, 0x010a, 0x0112, 0x0117, 0x0121, 0x0125,
    0x012a, 0x0130, 0x0139, 0x013f, 0x0147, 0x014d, 0x0150, 0x0157,
    0x0160, 0x0168, 0x016e, 0x0176, 0x017c, 0x0183, 0x0189, 0x018e,
    0x0191, 0x0195, 0x0199, 0x01a2, 0x01a8, 0x01b0, 0x01b5, 0x01bd,
    0x01c2, 0x01ca, 0x01ca, 0x01ce, 0x01d6, 0x01db, 0x01e5, 0x01ec,
    0x01f1, 0x01bd, 0x01f8, 0x01fe, 0x0205, 0x020d, 0x0210, 0x0215,
    0x021f, 0x0226, 0x0229, 0x0231, 0x0059, 0x0237, 0x023e,
};

static const uint8_t mf_rlefont_HelveticaItalic_8_glyph_data_1[549] PROGMEM = {
    0x02, 0x00, 0x10, 0x03, 0x3a, 0x50, 0x5f, 0x1e, 0x10, 0x06, 0x1f, 0x2b, 0x90, 0x36, 0x86, 0x86,
    0xb4, 0x4f, 0x10, 0x05, 0x55, 0xbc, 0x4c, 0x24, 0x41, 0x05, 0x1a, 0x40, 0x62, 0x65, 0xd6, 0x10,
    0x05, 0x39, 0xcd, 0x7c, 0x24, 0x89, 0x80, 0x20, 0x2f, 0x02, 0x1a, 0x4c, 0x19, 0x5f, 0x10, 0x05,
    0x1f, 0x62, 0x84, 0x92, 0x36, 0x57, 0x4f, 0x10, 0x02, 0x39, 0x32, 0x10, 0x08, 0x19, 0x62, 0xc8,
    0xb8, 0x68, 0x8d, 0x9e, 0x60, 0x10, 0x04, 0x30, 0xb4, 0x30, 0x62, 0x59, 0xbc, 0x10, 0x06, 0x23,
    0x41, 0x89, 0x1d, 0x10, 0x06, 0xfc, 0x34, 0x1c, 0x1e, 0x10, 0x05, 0x2c, 0x23, 0x74, 0x10, 0x08,
    0x19, 0x62, 0xc8, 0xb8, 0x68, 0x8f, 0xae, 0x60, 0x10, 0x02, 0x34, 0x74, 0x10, 0x03, 0x39, 0x62,
    0x65, 0x10, 0x05, 0xf4, 0x19, 0x33, 0x8b, 0x50, 0xe0, 0x10, 0x02, 0x39, 0x25, 0x86, 0x21, 0x74,
    0x10, 0x02, 0x34, 0xdc, 0x2f, 0xf4, 0x57, 0x10, 0x02, 0x19, 0x4f, 0x10, 0x04, 0x3a, 0x4a, 0x66,
    0x57, 0x24, 0x05, 0x1c, 0xb4, 0x88, 0x9a, 0x64, 0x4e, 0x41, 0x02, 0x29, 0x4c, 0x10, 0x02, 0x34,
    0x23, 0x58, 0x10, 0x02, 0x1f, 0x57, 0x67, 0x10, 0x04, 0x19, 0x25, 0x65, 0x84, 0x74, 0x10, 0x06,
    0x23, 0x41, 0x8e, 0x1d, 0x10, 0x07, 0x69, 0x5e, 0xe6, 0x1d, 0x3c, 0xa2, 0x07, 0x69, 0x5e, 0xea,
    0x1d, 0xa6, 0x8c, 0x07, 0xfc, 0x34, 0x92, 0x68, 0x5e, 0xb4, 0x8e, 0x1d, 0x3c, 0xa2, 0x05, 0x29,
    0x59, 0x3d, 0x61, 0x06, 0xd4, 0x34, 0x52, 0x5d, 0x44, 0x21, 0x06, 0x63, 0xf4, 0x52, 0x5d, 0x44,
    0x21, 0x06, 0x1d, 0x4c, 0x22, 0x5d, 0x44, 0x21, 0x08, 0x39, 0x80, 0x4a, 0x27, 0x75, 0x20, 0x2b,
    0x7d, 0x10, 0x06, 0x3e, 0x5b, 0x4c, 0x2b, 0x1b, 0x06, 0x50, 0x37, 0x46, 0x1b, 0x06, 0x63, 0x37,
    0x46, 0x1b, 0x02, 0x31, 0x19, 0x42, 0xfe, 0x10, 0x02, 0x3b, 0x59, 0x42, 0xfe, 0x10, 0x06, 0x39,
    0x2d, 0x8c, 0x86, 0x97, 0x5b, 0x6a, 0x06, 0x63, 0x31, 0x4b, 0x10, 0x06, 0x50, 0x6c, 0x36, 0x45,
    0x40, 0x1b, 0x06, 0x63, 0x6c, 0x36, 0x45, 0x40, 0x1b, 0x05, 0x3a, 0xcc, 0x65, 0x62, 0x37, 0x10,
    0x06, 0x1f, 0x2d, 0xa8, 0x2a, 0x8e, 0x8e, 0xb5, 0x5b, 0x1b, 0x06, 0x50, 0x31, 0x51, 0x06, 0x63,
    0x31, 0x51, 0x06, 0x20, 0x84, 0x58, 0x6b, 0x4a, 0x67, 0x06, 0x1a, 0x30, 0x53, 0x20, 0x10, 0x05,
    0x55, 0xb4, 0x24, 0x47, 0x5e, 0x10, 0x04, 0x2b, 0x50, 0x4d, 0x1b, 0x04, 0x3d, 0x19, 0x4d, 0x1b,
    0x04, 0xfc, 0x86, 0x63, 0x4d, 0x1b, 0x04, 0xfc, 0x8e, 0x63, 0x4d, 0x1b, 0x04, 0x00, 0x30, 0x63,
    0xdc, 0x30, 0x2b, 0x2d, 0x4a, 0x1b, 0x06, 0x3a, 0xdc, 0x62, 0xc6, 0xa2, 0x4a, 0xf3, 0x10, 0x04,
    0x48, 0x40, 0x49, 0x57, 0x10, 0x04, 0x21, 0x61, 0x58, 0x4e, 0x3f, 0x24, 0x04, 0x00, 0x36, 0x61,
    0x58, 0x4e, 0x3f, 0x24, 0x04, 0x3d, 0x59, 0x26, 0x4e, 0x3f, 0x24, 0x04, 0x19, 0x32, 0x84, 0x58,
    0x4e, 0x3f, 0x24, 0x02, 0x40, 0x50, 0x42, 0x02, 0x21, 0x50, 0x42, 0x02, 0x00, 0x86, 0x63, 0x42,
    0x02, 0x30, 0x63, 0x42, 0x05, 0x84, 0xb4, 0x65, 0xee, 0x5d, 0x21, 0x60, 0x10, 0x05, 0x2c, 0x41,
    0x41, 0x58, 0x25, 0x6b, 0x31, 0x35, 0x05, 0x21, 0x61, 0x58, 0x5d, 0x21, 0x60, 0x10, 0x05, 0x84,
    0x2f, 0x58, 0x5d, 0x21, 0x60, 0x10, 0x05, 0x3d, 0x59, 0x26, 0x5d, 0x21, 0x60, 0x10, 0x05, 0xfc,
    0x8e, 0x63, 0xb4, 0x84, 0x8d, 0xb0, 0x60, 0x10, 0x05, 0x19, 0xc9, 0x19, 0x62, 0xc8, 0xb0, 0x60,
    0x10, 0x05, 0x29, 0x59, 0x7c, 0x84, 0x58, 0x10, 0x05, 0x39, 0x8c, 0x74, 0x20, 0x5b, 0x21, 0x96,
    0x74, 0x10, 0x04, 0x2b, 0x50, 0x5c, 0x04, 0x3d, 0x19, 0x5c, 0x04, 0xfc, 0x86, 0x63, 0x5c, 0x04,
    0x00, 0x30, 0x63, 0x5c, 0x04, 0x3d, 0x19, 0x43, 0x04, 0x00, 0x34, 0x5f, 0x4f, 0x66, 0x57, 0x10,
    0x04, 0x30, 0x63, 0x43, 0x10,
};

static const uint16_t mf_rlefont_HelveticaItalic_8_glyph_offsets_1[96] PROGMEM = {
    0x0000, 0x0003, 0x0009, 0x0013, 0x0019, 0x0020, 0x0029, 0x002f,
    0x0038, 0x003c, 0x0046, 0x004e, 0x0054, 0x005a, 0x005f, 0x0069,
    0x006d, 0x0072, 0x007a, 0x0081, 0x0088, 0x008c, 0x0092, 0x009a,
    0x009e, 0x00a3, 0x00a8, 0x00af, 0x00b5, 0x00bc, 0x00c3, 0x00ce,
    0x00d3, 0x00d3, 0x00da, 0x00da, 0x00da, 0x00e1, 0x00e8, 0x00f2,
    0x00f8, 0x00f8, 0x00fd, 0x00fd, 0x0102, 0x0102, 0x0108, 0x0108,
    0x010e, 0x0116, 0x011b, 0x011b, 0x0122, 0x0122, 0x0122, 0x0129,
    0x0130, 0x013a, 0x013a, 0x013e, 0x013e, 0x0142, 0x0149, 0x014f,
    0x0156, 0x015b, 0x0160, 0x0166, 0x016c, 0x0160, 0x0176, 0x017f,
    0x0185, 0x018c, 0x0194, 0x019b, 0x01a3, 0x01a7, 0x01ab, 0x01b0,
    0x01b4, 0x01bd, 0x01c6, 0x01ce, 0x01d6, 0x01de, 0x01e8, 0x01f1,
    0x01f8, 0x0202, 0x0206, 0x020a, 0x020f, 0x0214, 0x0218, 0x0220,
};

static const struct mf_rlefont_char_range_s mf_rlefont_HelveticaItalic_8_char_ranges[] = {
    {32, 95, mf_rlefont_HelveticaItalic_8_glyph_offsets_0, mf_rlefont_HelveticaItalic_8_glyph_data_0},
    {160, 96, mf_rlefont_HelveticaItalic_8_glyph_offsets_1, mf_rlefont_HelveticaItalic_8_glyph_data_1},
};

const struct mf_rlefont_s mf_rlefont_HelveticaItalic_8 = {
    {
    "-Fondu-Helvetica-Medium-I-Normal--8-80-75-75-P-45-MacRoman-1",
    "HelveticaItalic_8",
    9, /* width */
    8, /* height */
    2, /* min x advance */
    9, /* max x advance */
    1, /* baseline x */
    6, /* baseline y */
    8, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_HelveticaItalic_8_dictionary_data,
    mf_rlefont_HelveticaItalic_8_dictionary_offsets,
    37, /* rle dict count */
    85, /* total dict count */
    2, /* char range count */
    mf_rlefont_HelveticaItalic_8_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_HelveticaItalic_8_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_HelveticaItalic_8
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_HelveticaItalic_8_listentry)
#endif


/* End of automatically generated font definition for HelveticaItalic_8. */

